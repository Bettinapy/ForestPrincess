{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/loaders.js","webpack:///./src/scripts/dashboard/sound.js","webpack:///./src/scripts/levels/level-draw.js","webpack:///./src/scripts/sprite.js","webpack:///./src/scripts/sprite-load.js","webpack:///./src/scripts/levels/matrix.js","webpack:///./src/scripts/collision/pos-converter.js","webpack:///./src/scripts/collision/tile-collider.js","webpack:///./src/scripts/collision/characters-collider.js","webpack:///./src/scripts/collision/drop.js","webpack:///./src/scripts/levels/layers.js","webpack:///./src/scripts/movements/vectors.js","webpack:///./src/scripts/movements/moving_objects_boundaries.js","webpack:///./src/scripts/movements/moving_objects.js","webpack:///./src/scripts/movements/jump.js","webpack:///./src/scripts/movements/run.js","webpack:///./src/scripts/dashboard/timer.js","webpack:///./src/scripts/player.js","webpack:///./src/scripts/movements/enemy_walk.js","webpack:///./src/scripts/fixed-time-loop.js","webpack:///./src/scripts/keyboard-input.js","webpack:///./src/scripts/camera.js","webpack:///./src/scripts/dashboard/button.js","webpack:///./src/scripts/game.js","webpack:///./src/scripts/dashboard/dashboard-draw.js","webpack:///./src/scripts/princess.js","webpack:///./src/scripts/enemies.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","loadImage","url","Promise","resolve","image","Image","addEventListener","src","Sound","this","sound","document","createElement","setAttribute","style","display","body","appendChild","loop","play","pause","createGroundLayer","backgrounds","sprites","groundBuffer","height","width","forEach","bg","background","context","ranges","x1","x2","y1","y2","x","y","drawTile","tile","drawGround","getContext","camera","drawImage","pos","createCharacterLayer","character","characterBuffer","characterBufferContext","clearRect","draw","Sprite","tiles","Map","oppoEles","map","flip","ele","eleContext","scale","translate","set","resizeX","resizeY","loadBackgroundLayers","then","mainImg","mainBg","Matrix","table","window","PosConverter","matrix","tileSize","Math","floor","pos1","pos2","posMax","ceil","range","push","posToIndex","iX","iY","ytop","ybottom","xleft","xright","matches","posToIndexRange","match","getByIndex","posX","posY","TileCollider","tilesMatrix","vel","size","getByRange","walk","enemyDir","distance","CharactersCollider","characters","obj","boundaries","isCollide","console","log","Drop","Layer","layers","Set","charactersCollider","tileCollider","characterDrop","gameOver","layer","timestep","jump","update","run","player","checkCollisionX","checkCollisionY","check","Vector","setVector","MovingObjectBoundary","getBottom","getTop","getLeft","getRight","MovingObject","Jump","duration","exactTime","velocityY","velocityX","Run","speed","dir","abs","Timer","time","font","fillStyle","fillText","round","Player","score","timer","updateTime","EnemyWalk","FixedTimeLoop","accumulated_time","old_time_stamp","new_time_stamp","requestAnimationFrame","KeyboardInput","rightPressed","leftPressed","spacePressed","keyDownHandler","keyUpHandler","event","preventDefault","keyCode","start","stop","Camera","Button","text","canvas","game","clicked","hovered","offsetLeft","offsetTop","buttonBuffer","buttonBufferContext","clientX","clientY","heigth","mousePos","handler","beginPath","moveTo","arcTo","closePath","strokeStyle","stroke","fill","fontSize","measureText","textX","textY","textAlign","hoverHandler","clickHandler","Game","ctx","bgMusic","all","drawDashboardBg","titleBuffer","titleBufferContext","drawTitle","startBtn","listenMouse","level","jungleImg","jungleTiles","fetch","response","clone","json","princessIdleImg","princessIdle","princessRunImg","princessRun","pIdle","pRun","princess","pRuns","pRunsIdx","length","enemyWalkImg","enemyWalk","enemy","eWalks","enemyWalkIdx","mainBgBuffer","createMainBgLayer","add","listenKeys","fixedLoop","getElementsByTagName","showMainPage"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export function loadImage(url) {\n  /*\n   * We are going to return a Promise which, when we .then\n   * will give us an Image that should be fully loaded\n   */\n  return new Promise((resolve) => {\n    /*\n     * Create the image that we are going to use to\n     * to hold the resource\n     */\n    const image = new Image();\n    /*\n     * The Image API deals in even listeners and callbacks\n     * we attach a listener for the \"load\" event which fires\n     * when the Image has finished the network request and\n     * populated the Image with data\n     */\n    image.addEventListener(\"load\", () => {\n      /*\n       * You have to manually tell the Promise that you are\n       * done dealing with asynchronous stuff and you are ready\n       * for it to give anything that attached a callback\n       * through .then a realized value.  We do that by calling\n       * resolve and passing it the realized value\n       */\n      resolve(image);\n    });\n    /*\n     * Setting the Image.src is what starts the networking process\n     * to populate an image.  After you set it, the browser fires\n     * a request to get the resource.  We attached a load listener\n     * which will be called once the request finishes and we have\n     * image data\n     */\n    image.src = url;\n  });\n}\n\nexport function loadLevel(level) {\n\n  return fetch(`src/scripts/levels/${level}.json`)\n    .then((response) => {\n    \n        return(response.clone().json())\n    });\n}\n","class Sound{\n    constructor(src){\n        this.sound = document.createElement(\"audio\");\n        this.sound.src = src;\n        this.sound.setAttribute(\"preload\", \"auto\");\n        this.sound.setAttribute(\"controls\", \"none\");\n        this.sound.style.display = \"none\";\n        document.body.appendChild(this.sound);\n    }\n    \n    loop(){\n        this.sound.loop = true;\n    }\n\n    play(){\n        this.sound.play();\n    }\n\n    pause(){\n        this.sound.pause();\n    }\n\n}\n\nexport default Sound;","export function drawGround(background, context, sprites) {\n\n  background.ranges.forEach(([x1, x2, y1, y2]) => {\n\n    for (let x = x1; x < x2; x++) {\n      for (let y = y1; y < y2; y++) {\n        sprites.drawTile(background.tile, context, x, y);\n      }\n    }\n  });\n}\n\nexport function createGroundLayer(backgrounds, sprites){\n  const worldW = 24000;\n\n  const groundBuffer = document.createElement('canvas');\n  groundBuffer.height = 390;\n  groundBuffer.width = worldW;\n\n  backgrounds.forEach(bg => {\n    drawGround(bg, groundBuffer.getContext('2d'), sprites)\n  })\n\n  return function drawGroundLayer(context, camera){\n\n    context.drawImage(groundBuffer, -camera.pos.x, 0);\n  }\n}\n\nexport function createMainBgLayer(mainBg){\n  const mainBgBuffer = document.createElement('canvas');\n  mainBgBuffer.height = 390;\n  mainBgBuffer.width = 600 * 2 + 50;\n  const mainBgBufferContext = mainBgBuffer.getContext('2d');\n  \n  return function drawMainBgLayer(context, camera){\n\n    mainBg.draw(\"mainBg\", context, 0, 0, 2, 2);\n\n  }\n}\n\nexport function createCharacterLayer(character){\n  const characterBuffer = document.createElement('canvas');\n  characterBuffer.height = 60;\n  characterBuffer.width = 60;\n  const characterBufferContext = characterBuffer.getContext('2d');\n  return function drawCharacterLayer(context, camera){\n    characterBufferContext.clearRect(0, 0, 60, 60);\n    character.draw(characterBufferContext);\n\n    context.drawImage(\n      characterBuffer, \n      character.pos.x - camera.pos.x, \n      character.pos.y - camera.pos.y\n      )\n    //princess.draw(context)\n  }\n}\n\n\nexport function createDashboardLayer(character) {\n  return function drawDashboardLayer(context, camera) {\n    character.player.timer.draw(context, 450, 50)\n  }\n}\n\n\nexport function createTileMatrix(backgrounds, tiles){\n  backgrounds.forEach(background => {\n    background.ranges.forEach(([x1, x2, y1, y2]) => {\n  \n      for (let x = x1; x < x2; x++) {\n        for (let y = y1; y < y2; y++) {\n          tiles.set(x, y, {name: background.tile})\n        }\n      }\n    });\n\n  })\n}","class Sprite {\n    constructor(image, width, height) {\n        this.image = image;\n        this.width = width;\n        this.height = height;\n        // this.tiles store all created sprites\n        this.tiles = new Map();\n    }\n\n    create(name, x, y, width, height){\n        const oppoEles = [false, true].map(flip => {\n            if(!width) width = this.width;\n            if(!height) height = this.height;\n            const ele = document.createElement('canvas');\n            ele.height = height;\n            ele.width = width;\n            const eleContext = ele.getContext('2d');\n\n            if(flip){\n                // rotate canvas horizontally\n                eleContext.scale(-1,1);\n                // hard coded here  \n                eleContext.translate(-15, 0);\n            }\n            \n            eleContext.drawImage(\n                this.image,\n                x,\n                y,\n                width,\n                height,\n                0,0,\n                width,\n                height\n            );\n\n            return ele;\n        })\n        this.tiles.set(name, oppoEles)\n    }\n\n    draw(name, context, x, y, resizeX=1, resizeY=1, flip=false){\n        const ele = this.tiles.get(name)[flip ? 1 : 0];\n        context.drawImage(ele, x, y, this.width*resizeX, this.height*resizeY);        \n    }\n\n    drawTile(name, context, x, y, resizeX = 1, resizeY = 1, flip=false) {\n        const ele = this.tiles.get(name)[flip ? 1 : 0];\n    \n        context.drawImage(ele, x*this.width, y*this.height, this.width * resizeX, this.height * resizeY);\n    }\n}\n\nexport default Sprite;","import Sprite from './sprite';\nimport {loadImage} from './loaders';\n\nexport function loadBackgroundLayers(){\n    return loadImage(\"src/images/main-bg.png\").then((mainImg) => {\n      const mainBg = new Sprite(mainImg, 600, 450);\n      mainBg.create(\"mainBg\", 0, 0);\n\n      return mainBg;\n    });\n}\n\nexport function loadBackgroundTiles(){\n    return loadImage(\"src/images/jungle_tileset.png\")\n        .then((jungleImg) => {\n            \n            const jungleTiles = new Sprite(jungleImg, 30, 30);\n            jungleTiles.create(\"flatGround\", 70, 225);\n            jungleTiles.create(\"ground\", 354, 210);\n            jungleTiles.create(\"greenGrass\", 161, 33);\n            jungleTiles.create('obstacleGrass', 64, 34, 80, 60);\n            return jungleTiles;\n    });\n}\n\nexport function loadPrincessIdle() {\n  return loadImage(\"src/images/princess/Idle.png\").then((princessIdleImg) => {\n\n    const princessIdle = new Sprite(princessIdleImg, 30, 30);\n    princessIdle.create(\"idle-1\", 24, 11);\n    princessIdle.create(\"idle-2\", 24, 59);\n    princessIdle.create(\"idle-3\", 24, 303);\n    return princessIdle;\n  });\n}\n\nexport function loadPrincessRun() {\n  return loadImage(\"src/images/princess/Run.png\").then((princessRunImg) => {\n\n    const princessRun = new Sprite(princessRunImg, 30, 30);\n    princessRun.create(\"run-1\", 24, 11);\n    princessRun.create(\"run-2\", 24, 59);\n    princessRun.create(\"run-3\", 24, 153);\n    return princessRun;\n  });\n}\n\nexport function loadEnemyWalk() {\n  return loadImage(\"src/images/enemies/walk.png\").then((enemyWalkImg) => {\n\n    const enemyWalk = new Sprite(enemyWalkImg, 20, 20);\n    enemyWalk.create(\"walk-1\", 29, 14);\n    enemyWalk.create(\"walk-2\", 29, 60);\n    enemyWalk.create(\"walk-3\", 29, 109);\n    return enemyWalk;\n  });\n}","class Matrix{\n    constructor(){\n        this.table = [];\n    }\n\n    set(x,y,value){\n        if(!this.table[x]){\n            this.table[x] = [];\n        }\n        this.table[x][y] = value;\n    }\n\n    get(x,y){\n        if(this.table[x]){\n            return this.table[x][y]\n        }else{\n            return undefined;\n        }\n\n    }\n}\n\nwindow.Matrix = Matrix;\n\nexport default Matrix;","// conver the real world position to index\nclass PosConverter{\n    constructor(matrix, tileSize=30){\n        this.matrix = matrix;\n        this.tileSize = tileSize;\n    }\n\n    posToIndex(pos){\n        return Math.floor(pos/this.tileSize)\n    }\n\n    posToIndexRange(pos1, pos2){\n        const posMax = Math.ceil(pos2/this.tileSize) * this.tileSize\n        const range = [];\n        while(pos1 < posMax){\n            range.push(this.posToIndex(pos1));\n            pos1 += this.tileSize;\n        }\n        return range;\n    }\n\n    getByIndex(iX, iY){\n        const tile = this.matrix.get(iX, iY);\n        const ytop = iY* this.tileSize;\n        const ybottom = ytop + this.tileSize;\n        const xleft = iX * this.tileSize;\n        const xright = xleft + this.tileSize;\n\n        if(tile){\n            return {\n                tile,\n                ytop,\n                ybottom, \n                xleft,\n                xright \n            }\n        }\n    }\n\n    getByRange(xleft, xright, ybottom, ytop){\n        const matches = [];\n        this.posToIndexRange(xleft, xright).forEach(iX => {\n            this.posToIndexRange(ybottom, ytop).forEach(iY=>{\n                const match = this.getByIndex(iX, iY);\n                if(match){\n                    matches.push(match)\n                }\n            })\n        })\n        return matches;\n    }\n\n    matchPos(posX, posY){\n       \n        return this.getByIndex(this.posToIndex(posX), this.posToIndex(posY))\n    }\n\n}\n\nexport default PosConverter;","import PosConverter from './pos-converter';\n\nclass TileCollider {\n    constructor(tilesMatrix) {\n        this.tiles = new PosConverter(tilesMatrix);\n    }\n\n    checkCollisionY(character){\n      \n        let y;\n        if (character.vel.y > 0) {\n            y = character.pos.y + character.size.y\n        } else if (character.vel.y < 0 ) {\n            y = character.pos.y;\n        } else {\n            return;\n        }\n        \n        const matches = this.tiles.getByRange(character.pos.x, character.pos.x + character.size.x, y, y);\n        \n            matches.forEach(match=>{\n                if (match.tile.name !== 'flatGround' && match.tile.name !== 'ground' && match.tile.name !== 'greenGrass'){\n                    return\n                }\n                if(character.vel.y > 0){\n        \n                    if (character.pos.y + character.size.y >= match.ytop) {\n                        character.pos.y = match.ytop - character.size.y;\n                        character.vel.y = 0;\n    \n                    }\n                } else if (character.vel.y < 0) {\n                    if (character.pos.y < match.ybottom) {\n                        character.pos.y = match.ybottom;\n                        character.vel.y = 0;\n                    }\n                }\n    \n            })\n\n    \n    }\n\n    checkCollisionX(character) {\n        let x;\n         \n        if (character.vel.x > 0) {\n            x = character.pos.x + character.size.x\n        } else if (character.vel.x < 0) {\n            x = character.pos.x;\n        } else {\n            return;\n        }\n\n        const matches = this.tiles.getByRange(x, x, character.pos.y, character.pos.y + character.size.y)\n\n       \n        matches.forEach(match=>{\n            if (match.tile.name !== 'flatGround' && match.tile.name !== 'ground' && match.tile.name !== 'greenGrass') {\n                return\n            }\n            if (character.vel.x > 0) { \n                if (character.pos.x + character.size.x > match.xleft) {\n                    character.pos.x = match.xleft - character.size.x;\n                    character.vel.x = 0;\n\n                    if(character.walk){\n                        character.walk.enemyDir = -1;\n                        character.walk.distance = 0;\n                    }\n                }\n            } else if (character.vel.x < 0) {\n                if (character.pos.x < match.xright) {\n                    character.pos.x = match.xright;\n                    character.vel.x = 0;\n                    if (character.walk) {\n                        character.walk.enemyDir = 1;\n                        character.walk.distance = 0;\n                    }\n                }\n            }\n\n        })\n    }\n\n}\n\nexport default TileCollider;","import Sound from '../dashboard/sound';\n\nclass CharactersCollider{\n    constructor(characters){\n        this.characters = characters;\n        this.sound = new Sound(\"src/audios/collision.wav\")\n    }\n\n    check(obj){\n        this.characters.forEach(character => {\n            if(character === obj){\n                return false\n            }\n            if(character.boundaries.isCollide(obj.boundaries)){\n                console.log('Collide! GAME OVER')\n                this.sound.play();\n                return true;\n            }\n            return false;\n        })\n    }\n}\n\nexport default CharactersCollider;","import Sound from '../dashboard/sound';\n\nclass Drop{\n    constructor(){\n        this.sound = new Sound(\"src/audios/drop.wav\");\n    }\n\n    check(character){\n        if(character.pos.y + character.size.y > 350){\n            console.log('Drop! Game Over!');\n            this.sound.play();\n            return true\n        }\n        return false;\n    }\n}\n\nexport default Drop;","import Matrix from './matrix';\nimport TileCollider from '../collision/tile-collider';\nimport CharactersCollider from '../collision/characters-collider';\nimport Drop from '../collision/drop';\n\nexport default class Layer {\n    constructor(){\n        this.layers = [];\n        this.tiles = new Matrix();\n        this.characters = new Set();\n        this.charactersCollider = new CharactersCollider(this.characters);\n        this.tileCollider = new TileCollider(this.tiles);\n        this.characterDrop = new Drop();\n        this.gameOver = false;\n    }\n\n    draw(context, camera){\n        this.layers.forEach(layer => {\n            layer(context, camera)\n        })\n    }\n\n    update(timestep, camera){\n        const gravity = 2000;\n        this.characters.forEach(character => {\n            // princess\n            if(character.jump){\n                character.jump.update(character, timestep);\n                character.run.update(character, timestep);\n                character.player.update(timestep);\n            }\n            \n            // enemy\n            if(character.walk){\n                character.walk.update(character, timestep);\n            }\n            \n            character.pos.x += character.vel.x * timestep;\n            this.tileCollider.checkCollisionX(character);\n\n            character.pos.y += character.vel.y * timestep;\n            this.tileCollider.checkCollisionY(character);\n                                    \n            character.vel.y += gravity * timestep;\n            \n            // Game logic, lose when drop\n            if(character.jump){\n                if(this.characterDrop.check(character)){\n                    this.gameOver = true;\n                    return;\n                };\n            }\n\n        })\n        \n\n        // Game logic, lose when collide\n        this.characters.forEach(character => {\n            if(this.charactersCollider.check(character)){\n                this.gameOver = true;\n                return;\n            };\n        })\n    }\n}\n\n","class Vector{\n    constructor(x, y) {\n        this.setVector(x, y);\n    }\n\n    setVector(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n}\n\nexport default Vector;","class MovingObjectBoundary{\n    constructor(pos, size){\n        this.pos = pos;\n        this.size = size;\n    }\n\n    isCollide(obj){\n        return this.getBottom() > obj.getTop() \n            && this.getTop() < obj.getBottom() \n            && this.getLeft() < obj.getRight()\n            && this.getRight() > obj.getLeft();\n    }\n\n    getBottom(){\n        return this.pos.y + this.size.y;\n    }\n\n    getTop(){\n        return this.pos.y\n    }\n\n    getLeft(){\n        return this.pos.x\n    }\n\n    getRight(){\n        return this.pos.x + this.size.x\n    }\n}\n\nexport default MovingObjectBoundary;","import Vector from './vectors';\nimport MovingObjectBoundary from './moving_objects_boundaries';\n\nclass MovingObject{\n    constructor(){\n        this.pos = new Vector(0,0);\n        this.vel = new Vector(0, 0);\n        this.size = new Vector(0,0);\n        this.boundaries = new MovingObjectBoundary(this.pos, this.size);\n    }\n    \n    update(timestep){\n        // multiplying the velocity by the amount of time (timestep)\n        // that has passed between rendering frames\n        this.pos.x += this.vel.x * timestep ;\n        this.pos.y += this.vel.y * timestep *1.8;      \n    }\n\n}\n\nexport default MovingObject;","import Sound from '../dashboard/sound';\n\nclass Jump{\n    constructor(){\n        this.duration = 0.1;\n        this.exactTime = 0;\n        this.velocityY= 500;\n        this.velocityX = 20;\n        this.sound = new Sound(\"src/audios/jump.wav\")\n    }\n\n    start(){\n        this.exactTime = this.duration;\n        this.sound.play();\n    }\n\n    stop(){\n        this.exactTime = 0;\n    }\n\n    update(character, timestep){\n        if(this.exactTime > 0){    \n            character.vel.y = -this.velocityY;\n            this.exactTime -= timestep;\n        }\n\n    }\n}\n\nexport default Jump;","class Run {\n    constructor() {\n        this.speed = 300;\n        this.dir = 0;\n        this.distance = 0;\n    }\n\n    update(character, timestep) {\n \n        character.vel.x = this.speed * this.dir * timestep;\n        if (this.dir){\n            this.distance += Math.abs(character.vel.x * timestep);\n        } else{\n            this.distance = 0;\n        }\n    }\n}\n\nexport default Run;","class Timer{\n    constructor(time=0){\n        this.time = time;\n    }\n\n    updateTime(timestep){\n        this.time += timestep\n    }\n\n    draw(context, x, y){\n        context.font = \"30px VT323\";\n        context.fillStyle = 'white';\n        context.fillText(`Time: ${Math.round(this.time)}`, x, y)\n    }\n}\n\nexport default Timer;","// Add a player control property to princess, then add \n// timer & score to player control\n// Create a dashboard to display timer and score\nimport Timer from './dashboard/timer';\n\nclass Player{\n    constructor(){\n        this.score = 0;\n        this.timer = new Timer();\n    }\n\n    update(timestep){\n        this.timer.updateTime(timestep);\n    }\n}\n\nexport default Player;","class EnemyWalk {\n    constructor() {\n        this.speed = 4000;\n        this.enemyDir = -1;\n        this.distance = 0;\n    }\n\n    update(character, timestep) {\n        character.vel.x = this.speed * this.enemyDir * timestep;\n        this.distance += Math.abs(character.vel.x * timestep);\n    }\n}\n\nexport default EnemyWalk;","export default class FixedTimeLoop{\n    constructor(timestep = 1/60, gameOver){\n        this.gameOver = gameOver;\n        let accumulated_time = 0;\n        let old_time_stamp = 0;\n        this.updateTime = (new_time_stamp) => {\n\n            accumulated_time += (new_time_stamp - old_time_stamp)/1000;\n           \n            // only update when accumulated time > timestep\n            if(!this.gameOver){\n                while (accumulated_time > timestep){\n                    this.update(timestep);\n                    accumulated_time -= timestep;\n                }\n                old_time_stamp = new_time_stamp;\n                requestAnimationFrame(this.updateTime);\n            }\n        }\n    }\n\n    start(){\n        requestAnimationFrame(this.updateTime)\n    }\n\n    \n}","class KeyboardInput{\n    constructor(character){\n        this.rightPressed = false;\n        this.leftPressed = false;\n        this.spacePressed = false;\n        this.character = character;\n        this.keyDownHandler = this.keyDownHandler.bind(this);\n        this.keyUpHandler = this.keyUpHandler.bind(this);\n    }\n\n    keyDownHandler(event) {\n        event.preventDefault();\n        if (event.keyCode === 39) {\n           \n            this.character.run.dir = event.keyCode;\n            this.rightPressed = true;\n        }\n        else if (event.keyCode === 37) {\n            this.character.run.dir = -event.keyCode;\n            this.leftPressed = true;\n        }\n        if (event.keyCode === 32) {\n            // avoid jump stack\n            if (this.character.jump.exactTime === 0 && Math.abs(this.character.vel.y) < 34){\n                this.character.jump.start();\n                this.spacePressed = true;\n            }\n        }\n}\n\n    keyUpHandler(event) {\n        event.preventDefault();\n        if (event.keyCode === 39) {\n            this.character.run.dir = 0;\n            this.rightPressed = false;\n        }\n        else if (event.keyCode === 37) {\n            this.character.run.dir = 0;\n            this.leftPressed = false;\n        }\n        if (event.keyCode === 32) {\n            this.character.jump.stop();\n            this.spacePressed = false;\n        }\n    }\n\n    listenKeys(window){\n\n        window.addEventListener('keydown', this.keyDownHandler);\n        window.addEventListener('keyup', this.keyUpHandler);\n    }\n}\n\nexport default KeyboardInput;","import Vector from './movements/vectors';\n\nclass Camera{\n    constructor(){\n        this.pos = new Vector(0,0);\n    }\n}\n\nexport default Camera;","class Button{\n    constructor(text, x, y, width, height, canvas, context, game){\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.clicked = false;\n        this.hovered = false;\n        this.text = text;\n        this.canvas = canvas;\n        this.context = context;\n        this.offsetLeft = this.canvas.offsetLeft;\n        this.offsetTop = this.canvas.offsetTop;\n        this.game = game;\n        this.draw();\n        const buttonBuffer = document.createElement('canvas');\n        buttonBuffer.height = 390;\n        buttonBuffer.width = 600;\n        this.buttonBufferContext = buttonBuffer.getContext('2d');\n    }\n\n    getMousePos(event){\n        return {\n            x: event.clientX - this.offsetLeft,\n            y: event.clientY - this.offsetTop\n        };\n    }\n\n    isInside(pos){\n        return (pos.x > this.x && pos.x < (this.x + this.width) && pos.y < (this.y + this.heigth) && pos.y > this.y)\n    }\n\n    hoverHandler(event){\n        let mousePos = {\n            x: event.clientX - this.offsetLeft,\n            y: event.clientY - this.offsetTop\n        };\n\n        if (mousePos.x > this.x && mousePos.x < (this.x + this.width) && mousePos.y > this.y && mousePos.y < this.y + this.height){\n            this.hovered = true;\n            this.draw();\n        }else{\n            this.hovered = false;\n            this.draw();         \n        }\n    }\n\n    clickHandler(event){\n        let mousePos = {\n            x: event.clientX - this.offsetLeft,\n            y: event.clientY - this.offsetTop\n        };\n        if (mousePos.x > this.x && mousePos.x < (this.x + this.width) && mousePos.y > this.y && mousePos.y < this.y + this.height){\n            this.clicked = true;\n            console.log('Start Game!')\n            this.handler(this.game);\n            \n        }else{\n            this.clicked = false;\n            \n        }\n    }\n\n    draw(){\n\n        const buttonBuffer = document.createElement('canvas');\n        buttonBuffer.height = this.canvas.height;\n        buttonBuffer.width = this.canvas.width;\n        const buttonBufferContext = buttonBuffer.getContext('2d');\n        buttonBufferContext.clearRect(0, 0, buttonBuffer.height, buttonBuffer.width)\n       \n        const radius = 3;\n        buttonBufferContext.beginPath();\n        buttonBufferContext.moveTo(this.x + radius, this.y);\n        buttonBufferContext.arcTo(this.x + this.width, this.y, this.x + this.width, this.y + this.height, radius);\n        buttonBufferContext.arcTo(this.x + this.width, this.y + this.height, this.x, this.y + this.height, radius);\n        buttonBufferContext.arcTo(this.x, this.y + this.height, this.x, this.y, radius);\n        buttonBufferContext.arcTo(this.x, this.y, this.x + this.width, this.y, radius);\n        buttonBufferContext.closePath();\n        //buttonBufferContext.fillRect(this.x, this.y, this.width, this.height);\n        buttonBufferContext.strokeStyle = \"white\"\n        buttonBufferContext.stroke();\n\n        if (this.hovered) {\n            buttonBufferContext.fillStyle = \"#57AF55\";\n            buttonBufferContext.fill();\n        } else {\n            buttonBufferContext.fillStyle = \"green\";\n            buttonBufferContext.fill();\n        }\n         \n    \n        const fontSize = 25;\n        buttonBufferContext.fillStyle = \"white\";\n        buttonBufferContext.font = fontSize + \"px VT323\";\n\n        //text position\n        const textSize = buttonBufferContext.measureText(this.text);\n        const textX = this.x + (this.width / 2) ;\n        const textY = this.y + (this.height / 2) + fontSize/3;\n\n        buttonBufferContext.textAlign = \"center\"\n        //draw the text\n        buttonBufferContext.fillText(this.text, textX, textY);\n        \n        this.context.drawImage(buttonBuffer, 0,0)\n    }\n\n\n    listenMouse(){\n        this.canvas.addEventListener('mousemove', this.hoverHandler.bind(this));\n        this.canvas.addEventListener('click', this.clickHandler.bind(this));\n    }\n}\n\nexport default Button;","import Sound from './dashboard/sound';\nimport { loadLevel } from \"./loaders\";\nimport {\n    createGroundLayer,\n    createMainBgLayer,\n    createCharacterLayer,\n    createDashboardLayer,\n    createTileMatrix\n} from './levels/level-draw';\nimport {\n    loadBackgroundLayers,\n    loadBackgroundTiles,\n} from \"./sprite-load\";\nimport Layer from './levels/layers';\nimport { createPrincessIdle } from './princess';\nimport { createEnemyWalk } from './enemies';\nimport FixedTimeLoop from './fixed-time-loop';\nimport KeyboardInput from './keyboard-input';\nimport Camera from './camera';\nimport {\n    drawDashboardBg,\n    drawTitle,\n\n}from './dashboard/dashboard-draw';\nimport Button from './dashboard/button';\n\nclass Game{\n    constructor(ctx, canvas){\n        this.bgMusic = new Sound(\"src/audios/background.ogg\");\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.start = this.start.bind(this);\n    }\n\n    showMainPage(){\n        Promise.all([\n            loadBackgroundLayers()\n        ]).then(([bg]) => {\n            drawDashboardBg(bg, this.ctx);\n            drawTitle(this.ctx);\n\n            // draw buttons\n            const game = this;\n            const startBtn = new Button('start', 260, 220, 80, 30, this.canvas, this.ctx, game);\n            startBtn.handler = function(ctx){\n                ctx.start();\n            }\n            startBtn.listenMouse();\n        })\n    }\n\n    start(){\n        Promise.all([\n            loadBackgroundLayers(),\n            loadBackgroundTiles(),\n            loadLevel(\"level-1\"),\n            createPrincessIdle(),\n            createEnemyWalk(),\n        ]).then(([mainBg, jungleTiles, level, princessIdle, enemy]) => {\n\n            enemy.pos.setVector(600, 0)\n\n            // push to layers array and draw\n            const layer = new Layer();\n            layer.layers.push(createMainBgLayer(mainBg));\n            layer.layers.push(createGroundLayer(level.backgrounds, jungleTiles));\n            layer.layers.push(createCharacterLayer(princessIdle));\n            layer.layers.push(createCharacterLayer(enemy));\n            layer.layers.push(createDashboardLayer(princessIdle))\n\n            // add to characters\n            layer.characters.add(princessIdle);\n            layer.characters.add(enemy);\n\n            // create matrix\n            createTileMatrix(level.backgrounds, layer.tiles)\n\n            // scrolling camera\n            const camera = new Camera;\n\n            // keyboard input\n            const input = new KeyboardInput(princessIdle);\n            input.listenKeys(window);\n\n            // background music\n            const bgMusic = new Sound(\"src/audios/background.ogg\")\n            //bgMusic.loop();\n            bgMusic.play();\n            \n            const context = this.ctx;\n\n            const fixedLoop = new FixedTimeLoop(layer.gameOver);\n            fixedLoop.update = function update(timestep) {\n\n                layer.update(timestep, camera);\n\n                if (princessIdle.pos.x > 300) {\n                    camera.pos.x = princessIdle.pos.x - 300;\n                }\n                layer.draw(context, camera);\n\n            }\n            fixedLoop.start();\n        });\n    }\n}\n\nexport default Game;","\n\nexport function drawDashboardBg(bg, context){\n    bg.draw(\"mainBg\", context, 0, 0, 2, 2)\n}\n\nexport function drawTitle(context){\n    const titleBuffer = document.createElement('canvas');\n    titleBuffer.height = 300;\n    titleBuffer.width = 300;\n    const titleBufferContext = titleBuffer.getContext('2d');\n    titleBufferContext.font = \"45px Bungee Shade\";\n    titleBufferContext.fillStyle = \"white\";\n    titleBufferContext.textAlign = \"center\";\n    titleBufferContext.fillText('Forest', 150, 40);\n    titleBufferContext.fillText('Princess', 150, 100);\n    context.drawImage(titleBuffer, 160, 80);\n}\n\n","import MovingObject from './movements/moving_objects';\nimport {loadPrincessIdle, loadPrincessRun} from './sprite-load';\nimport Jump from './movements/jump';\nimport Run from './movements/run';\n\nimport Player from './player';\n\nexport function createPrincessIdle(){\n    return Promise.all([\n        loadPrincessIdle(),\n        loadPrincessRun()\n    ]\n    ).then(([pIdle, pRun]) => {\n            const princess = new MovingObject();\n            princess.size.setVector(60, 60)\n\n            princess.jump = new Jump();\n            princess.run = new Run();\n            princess.player = new Player();\n            \n            const pRuns = ['run-1', 'run-2', 'run-3']\n            \n            princess.draw = function drawPrincess(context){\n                        \n                let pRunsIdx = (Math.floor(princess.run.distance / 10)) % pRuns.length;\n                if(princess.run.dir !== 0){\n                    pRun.draw(pRuns[pRunsIdx], context, 0,0,3,3, princess.run.dir < 0);\n                }else{\n                    pIdle.draw(\"idle-1\", context, 0, 0, 3, 3);\n                }\n                                \n            }\n            return princess;\n        })\n}","import MovingObject from './movements/moving_objects';\nimport { loadEnemyWalk } from './sprite-load';\nimport EnemyWalk from './movements/enemy_walk';\n\nexport function createEnemyWalk() {\n    return Promise.all([\n        loadEnemyWalk(),\n    ]\n    ).then(([enemyWalk]) => {\n        const enemy = new MovingObject();\n        enemy.size.setVector(60, 60)\n\n        enemy.walk = new EnemyWalk();\n\n        const eWalks = ['walk-1', 'walk-2', 'walk-3']\n\n        enemy.draw = function drawEnemy(context) {\n            \n            let enemyWalkIdx = (Math.floor(enemy.walk.distance / 10)) % eWalks.length; \n          \n            enemyWalk.draw(eWalks[enemyWalkIdx], context, 0, 0, 3, 3, enemy.walk.enemyDir < 0);                        \n        }\n        return enemy;\n    })\n}","import \"./styles/index.scss\";\nimport './scripts/loaders';\nimport Game from './scripts/game';\nimport { loadLevel } from \"./scripts/loaders\";\nimport { \n  createGroundLayer,\n  createMainBgLayer, \n  createCharacterLayer,\n  createDashboardLayer,\n  createTileMatrix\n} from './scripts/levels/level-draw';\nimport {\n  loadBackgroundLayers,\n  loadBackgroundTiles,\n} from \"./scripts/sprite-load\";\nimport Layer from './scripts/levels/layers';\nimport {createPrincessIdle} from './scripts/princess';\nimport {createEnemyWalk} from './scripts/enemies';\nimport FixedTimeLoop from './scripts/fixed-time-loop';\nimport KeyboardInput from './scripts/keyboard-input';\nimport Camera from './scripts/camera';\nimport Sound from './scripts/dashboard/sound';\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const canvas = document.getElementsByTagName(\"canvas\")[0];\n  const ctx = canvas.getContext(\"2d\");\n  const offsetLeft = canvas.offsetLeft;\n  const offsetTop = canvas.offsetTop;\n\n  const game = new Game(ctx, canvas);\n  game.showMainPage();\n  // keyboard input to start the game: press 'r'\n  window.addEventListener('keydown', function(event){\n    event.preventDefault();\n    if(event.keyCode === 82){\n      game.start()\n    }\n\n  })\n\n  // Promise.all([\n  //   loadBackgroundLayers(),\n  //   loadBackgroundTiles(),\n  //   loadLevel(\"level-1\"),\n  //   createPrincessIdle(),\n  //   createEnemyWalk(),\n  // ]).then(([mainBg, jungleTiles, level, princessIdle, enemy]) => {\n    \n  //   enemy.pos.setVector(600,0)\n\n  //   // push to layers array and draw\n  //   const layer = new Layer();\n  //   layer.layers.push(createMainBgLayer(mainBg));\n  //   layer.layers.push(createGroundLayer(level.backgrounds, jungleTiles));\n  //   layer.layers.push(createCharacterLayer(princessIdle));\n  //   layer.layers.push(createCharacterLayer(enemy));\n  //   layer.layers.push(createDashboardLayer(princessIdle))\n    \n  //   // add to characters\n  //   layer.characters.add(princessIdle);\n  //   layer.characters.add(enemy);\n\n  //   // create matrix\n  //   createTileMatrix(level.backgrounds, layer.tiles)\n   \n  //   // scrolling camera\n  //   const camera = new Camera;\n\n  //   // keyboard input\n  //   const input = new KeyboardInput(princessIdle);\n  //   input.listenKeys(window);\n\n  //   // background music\n  //   const bgMusic = new Sound(\"src/audios/background.ogg\")\n  //   //bgMusic.loop();\n  //   bgMusic.play();\n\n  //   const fixedLoop = new FixedTimeLoop();\n  //   fixedLoop.update = function update(timestep){\n\n  //     layer.update(timestep, camera);\n\n  //     if (princessIdle.pos.x > 300) {\n  //       camera.pos.x = princessIdle.pos.x - 300;\n  //     }\n  //     layer.draw(ctx, camera);\n      \n  //   }\n  //   fixedLoop.start();\n  // });\n\n});"],"sourceRoot":""}