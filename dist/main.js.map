{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/loaders.js","webpack:///./src/scripts/dashboard/sound.js","webpack:///./src/scripts/collision/pos-converter.js","webpack:///./src/scripts/levels/level-draw.js","webpack:///./src/scripts/sprite.js","webpack:///./src/scripts/sprite-load.js","webpack:///./src/scripts/levels/matrix.js","webpack:///./src/scripts/collision/tile-collider.js","webpack:///./src/scripts/collision/characters-collider.js","webpack:///./src/scripts/collision/drop.js","webpack:///./src/scripts/levels/layers.js","webpack:///./src/scripts/movements/vectors.js","webpack:///./src/scripts/movements/moving_objects_boundaries.js","webpack:///./src/scripts/movements/moving_objects.js","webpack:///./src/scripts/movements/jump.js","webpack:///./src/scripts/movements/run.js","webpack:///./src/scripts/dashboard/timer.js","webpack:///./src/scripts/player.js","webpack:///./src/scripts/movements/enemy_walk.js","webpack:///./src/scripts/fixed-time-loop.js","webpack:///./src/scripts/keyboard-input.js","webpack:///./src/scripts/camera.js","webpack:///./src/scripts/dashboard/dashboard-draw.js","webpack:///./src/scripts/dashboard/button.js","webpack:///./src/scripts/game.js","webpack:///./src/scripts/princess.js","webpack:///./src/scripts/enemies.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","loadImage","url","Promise","resolve","image","Image","addEventListener","src","Sound","this","sound","document","createElement","setAttribute","style","display","body","appendChild","loop","play","pause","PosConverter","matrix","tileSize","pos","Math","floor","pos1","pos2","posMax","ceil","range","push","posToIndex","iX","iY","tile","ytop","ybottom","xleft","xright","matches","posToIndexRange","forEach","match","getByIndex","posX","posY","createGroundLayer","sprites","tilesMatrix","tilesConvert","groundBuffer","height","width","groundBufferContext","getContext","context","camera","cameraWidth","size","x","drawFrom","start","end","clearRect","col","table","y","drawTile","redraw","drawImage","createMainBgLayer","mainBg","mainBgBuffer","mainBgBufferContext","draw","createCharacterLayer","character","characterBuffer","characterBufferContext","Sprite","tiles","Map","oppoEles","map","flip","ele","eleContext","scale","translate","set","resizeX","resizeY","loadBackgroundLayers","then","mainImg","Matrix","window","TileCollider","vel","getByRange","walk","enemyDir","distance","CharactersCollider","characters","obj","result","boundaries","isCollide","console","log","Drop","Layer","layers","Set","charactersCollider","tileCollider","characterDrop","gameOver","layer","timestep","jump","update","run","player","checkCollisionX","checkCollisionY","check","reset","Vector","setVector","MovingObjectBoundary","getBottom","getTop","getLeft","getRight","MovingObject","Jump","duration","exactTime","velocityY","velocityX","Run","speed","dir","abs","Timer","time","timerBuffer","timerBufferContext","font","fillStyle","fillText","round","Player","score","timer","updateTime","resetTime","EnemyWalk","FixedTimeLoop","new_time_stamp","accumulated_time","requestId","undefined","timestamp","cancelAnimationFrame","requestAnimationFrame","KeyboardInput","rightPressed","leftPressed","spacePressed","keyDownHandler","keyUpHandler","event","preventDefault","keyCode","stop","Camera","createTitleLayer","text","titleBuffer","titleBufferContext","textAlign","createButtonLayer","button","buttonBuffer","buttonBufferContext","measureText","fontSize","textX","textY","beginPath","moveTo","arcTo","strokeStyle","stroke","hovered","fill","Button","canvas","clicked","offsetLeft","offsetTop","hoverHandler","clickHandler","buttonLayer","clientX","clientY","mousePos","last_click","handler","Game","ctx","startMusic","gameOverMusic","gameOverView","buttons","bgs","all","bg","game","startBtn","hover","e","click","removeEventListener","level","jungleImg","jungleTiles","fetch","response","clone","json","princessIdleImg","princessIdle","princessRunImg","princessRun","pIdle","pRun","princess","pRuns","pRunsIdx","length","enemyWalkImg","enemyWalk","enemy","eWalks","enemyWalkIdx","backgrounds","background","ranges","x1","x2","y1","y2","createDashboardLayer","add","listenKeys","fixedLoop","restartBtn","quitBtn","showMainPage","getElementsByTagName","alpha"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export function loadImage(url) {\n  /*\n   * We are going to return a Promise which, when we .then\n   * will give us an Image that should be fully loaded\n   */\n  return new Promise((resolve) => {\n    /*\n     * Create the image that we are going to use to\n     * to hold the resource\n     */\n    const image = new Image();\n    /*\n     * The Image API deals in even listeners and callbacks\n     * we attach a listener for the \"load\" event which fires\n     * when the Image has finished the network request and\n     * populated the Image with data\n     */\n    image.addEventListener(\"load\", () => {\n      /*\n       * You have to manually tell the Promise that you are\n       * done dealing with asynchronous stuff and you are ready\n       * for it to give anything that attached a callback\n       * through .then a realized value.  We do that by calling\n       * resolve and passing it the realized value\n       */\n      resolve(image);\n    });\n    /*\n     * Setting the Image.src is what starts the networking process\n     * to populate an image.  After you set it, the browser fires\n     * a request to get the resource.  We attached a load listener\n     * which will be called once the request finishes and we have\n     * image data\n     */\n    image.src = url;\n  });\n}\n\nexport function loadLevel(level) {\n\n  return fetch(`src/scripts/levels/${level}.json`)\n    .then((response) => {\n    \n        return(response.clone().json())\n    });\n}\n","class Sound{\n    constructor(src){\n        this.sound = document.createElement(\"audio\");\n        this.sound.src = src;\n        this.sound.setAttribute(\"preload\", \"auto\");\n        this.sound.setAttribute(\"controls\", \"none\");\n        this.sound.style.display = \"none\";\n        document.body.appendChild(this.sound);\n    }\n    \n    loop(){\n        this.sound.loop = true;\n    }\n\n    play(){\n        this.sound.play();\n    }\n\n    pause(){\n        this.sound.pause();\n    }\n\n}\n\nexport default Sound;","// conver the real world position to index\nclass PosConverter{\n    constructor(matrix, tileSize=30){\n        this.matrix = matrix;\n        this.tileSize = tileSize;\n    }\n\n    posToIndex(pos){\n        return Math.floor(pos/this.tileSize)\n    }\n\n    posToIndexRange(pos1, pos2){\n        const posMax = Math.ceil(pos2/this.tileSize) * this.tileSize\n        const range = [];\n        while(pos1 < posMax){\n            range.push(this.posToIndex(pos1));\n            pos1 += this.tileSize;\n        }\n        return range;\n    }\n\n    getByIndex(iX, iY){\n        const tile = this.matrix.get(iX, iY);\n        const ytop = iY* this.tileSize;\n        const ybottom = ytop + this.tileSize;\n        const xleft = iX * this.tileSize;\n        const xright = xleft + this.tileSize;\n\n        if(tile){\n            return {\n                tile,\n                ytop,\n                ybottom, \n                xleft,\n                xright \n            }\n        }\n    }\n\n    getByRange(xleft, xright, ybottom, ytop){\n        const matches = [];\n        this.posToIndexRange(xleft, xright).forEach(iX => {\n            this.posToIndexRange(ybottom, ytop).forEach(iY=>{\n                const match = this.getByIndex(iX, iY);\n                if(match){\n                    matches.push(match)\n                }\n            })\n        })\n        return matches;\n    }\n\n    matchPos(posX, posY){\n       \n        return this.getByIndex(this.posToIndex(posX), this.posToIndex(posY))\n    }\n\n}\n\nexport default PosConverter;","import PosConverter from '../collision/pos-converter';\n\nexport function drawGround(background, context, sprites) {\n\n  background.ranges.forEach(([x1, x2, y1, y2]) => {\n\n    for (let x = x1; x < x2; x++) {\n      for (let y = y1; y < y2; y++) {\n        sprites.drawTile(background.tile, context, x, y);\n      }\n    }\n  });\n}\n\nexport function createGroundLayer(sprites, tilesMatrix){\n  const tilesConvert = new PosConverter(tilesMatrix);\n\n  const groundBuffer = document.createElement('canvas');\n  groundBuffer.height = 390;\n  groundBuffer.width = 600+600;\n  const groundBufferContext = groundBuffer.getContext('2d');\n\n  function redraw(start, end){\n    groundBufferContext.clearRect(0,0,groundBuffer.width,groundBuffer.height);\n    for(let x=start; x<=end; x++){\n      const col = tilesMatrix.table[x];\n      if(col){\n        col.forEach((tile, y) => {\n          sprites.drawTile(tile.name, groundBufferContext, x-start, y)\n        })\n      }\n    }\n    \n  } \n\n  return function drawGroundLayer(context, camera){\n    const cameraWidth = tilesConvert.posToIndex(camera.size.x);\n    const drawFrom = tilesConvert.posToIndex(camera.pos.x);\n    const drawTo = cameraWidth + drawFrom;\n    redraw(drawFrom, drawTo)\n    context.drawImage(groundBuffer, Math.floor(-camera.pos.x % 30), Math.floor(-camera.pos.y));\n  }\n}\n\nexport function createMainBgLayer(mainBg){\n  const mainBgBuffer = document.createElement('canvas');\n  mainBgBuffer.height = 390;\n  mainBgBuffer.width = 600 + 50;\n  const mainBgBufferContext = mainBgBuffer.getContext('2d');\n  \n  return function drawMainBgLayer(context){\n    mainBgBufferContext.clearRect(0,0,mainBgBuffer.width,mainBgBuffer.height);\n    mainBg.draw(\"mainBg\", mainBgBufferContext, 0, 0, 2, 2);\n    context.drawImage(mainBgBuffer, 0, 0)\n\n  }\n}\n\nexport function createCharacterLayer(character){\n  const characterBuffer = document.createElement('canvas');\n  characterBuffer.height = 60;\n  characterBuffer.width = 60;\n  const characterBufferContext = characterBuffer.getContext('2d');\n  return function drawCharacterLayer(context, camera){\n    characterBufferContext.clearRect(0, 0, 60, 60);\n    character.draw(characterBufferContext);\n\n    context.drawImage(\n      characterBuffer, \n      character.pos.x - camera.pos.x, \n      character.pos.y - camera.pos.y\n      )\n    //princess.draw(context)\n  }\n}\n\n\nexport function createDashboardLayer(player) {\n  return function drawDashboardLayer(context, camera) {\n\n    player.timer.draw(context, 450, 50)\n  }\n}\n\n\nexport function createTileMatrix(backgrounds, tiles){\n  backgrounds.forEach(background => {\n    background.ranges.forEach(([x1, x2, y1, y2]) => {\n  \n      for (let x = x1; x < x2; x++) {\n        for (let y = y1; y < y2; y++) {\n          tiles.set(x, y, {name: background.tile})\n        }\n      }\n    });\n\n  })\n}","class Sprite {\n    constructor(image, width, height) {\n        this.image = image;\n        this.width = width;\n        this.height = height;\n        // this.tiles store all created sprites\n        this.tiles = new Map();\n    }\n\n    create(name, x, y, width, height){\n        const oppoEles = [false, true].map(flip => {\n            if(!width) width = this.width;\n            if(!height) height = this.height;\n            const ele = document.createElement('canvas');\n            ele.height = height;\n            ele.width = width;\n            const eleContext = ele.getContext('2d');\n\n            if(flip){\n                // rotate canvas horizontally\n                eleContext.scale(-1,1);\n                // hard coded here  \n                eleContext.translate(-15, 0);\n            }\n            \n            eleContext.drawImage(\n                this.image,\n                x,\n                y,\n                width,\n                height,\n                0,0,\n                width,\n                height\n            );\n\n            return ele;\n        })\n        this.tiles.set(name, oppoEles)\n    }\n\n    draw(name, context, x, y, resizeX=1, resizeY=1, flip=false){\n        const ele = this.tiles.get(name)[flip ? 1 : 0];\n        context.drawImage(ele, x, y, this.width*resizeX, this.height*resizeY);        \n    }\n\n    drawTile(name, context, x, y, resizeX = 1, resizeY = 1, flip=false) {\n        const ele = this.tiles.get(name)[flip ? 1 : 0];\n    \n        context.drawImage(ele, x*this.width, y*this.height, this.width * resizeX, this.height * resizeY);\n    }\n}\n\nexport default Sprite;","import Sprite from './sprite';\nimport {loadImage} from './loaders';\n\nexport function loadBackgroundLayers(){\n    return loadImage(\"src/images/main-bg.png\").then((mainImg) => {\n      const mainBg = new Sprite(mainImg, 600, 450);\n      mainBg.create(\"mainBg\", 0, 0);\n\n      return mainBg;\n    });\n}\n\nexport function loadBackgroundTiles(){\n    return loadImage(\"src/images/jungle_tileset.png\")\n        .then((jungleImg) => {\n            \n            const jungleTiles = new Sprite(jungleImg, 30, 30);\n            jungleTiles.create(\"flatGround\", 70, 225);\n            jungleTiles.create(\"ground\", 354, 210);\n            jungleTiles.create(\"greenGrass\", 161, 33);\n            jungleTiles.create('obstacleGrass', 64, 34, 80, 60);\n            return jungleTiles;\n    });\n}\n\nexport function loadPrincessIdle() {\n  return loadImage(\"src/images/princess/Idle.png\").then((princessIdleImg) => {\n\n    const princessIdle = new Sprite(princessIdleImg, 30, 30);\n    princessIdle.create(\"idle-1\", 24, 11);\n    princessIdle.create(\"idle-2\", 24, 59);\n    princessIdle.create(\"idle-3\", 24, 303);\n    return princessIdle;\n  });\n}\n\nexport function loadPrincessRun() {\n  return loadImage(\"src/images/princess/Run.png\").then((princessRunImg) => {\n\n    const princessRun = new Sprite(princessRunImg, 30, 30);\n    princessRun.create(\"run-1\", 24, 11);\n    princessRun.create(\"run-2\", 24, 59);\n    princessRun.create(\"run-3\", 24, 153);\n    return princessRun;\n  });\n}\n\nexport function loadEnemyWalk() {\n  return loadImage(\"src/images/enemies/walk.png\").then((enemyWalkImg) => {\n\n    const enemyWalk = new Sprite(enemyWalkImg, 20, 20);\n    enemyWalk.create(\"walk-1\", 29, 14);\n    enemyWalk.create(\"walk-2\", 29, 60);\n    enemyWalk.create(\"walk-3\", 29, 109);\n    return enemyWalk;\n  });\n}","class Matrix{\n    constructor(){\n        this.table = [];\n    }\n\n    set(x,y,value){\n        if(!this.table[x]){\n            this.table[x] = [];\n        }\n        this.table[x][y] = value;\n    }\n\n    get(x,y){\n        if(this.table[x]){\n            return this.table[x][y]\n        }else{\n            return undefined;\n        }\n\n    }\n}\n\nwindow.Matrix = Matrix;\n\nexport default Matrix;","import PosConverter from './pos-converter';\n\nclass TileCollider {\n    constructor(tilesMatrix) {\n        this.tiles = new PosConverter(tilesMatrix);\n    }\n\n    checkCollisionY(character){\n      \n        let y;\n        if (character.vel.y > 0) {\n            y = character.pos.y + character.size.y\n        } else if (character.vel.y < 0 ) {\n            y = character.pos.y;\n        } else {\n            return;\n        }\n        \n        const matches = this.tiles.getByRange(character.pos.x, character.pos.x + character.size.x, y, y);\n        \n            matches.forEach(match=>{\n                if (match.tile.name !== 'flatGround' && match.tile.name !== 'ground' && match.tile.name !== 'greenGrass'){\n                    return\n                }\n                if(character.vel.y > 0){\n        \n                    if (character.pos.y + character.size.y >= match.ytop) {\n                        character.pos.y = match.ytop - character.size.y;\n                        character.vel.y = 0;\n    \n                    }\n                } else if (character.vel.y < 0) {\n                    if (character.pos.y < match.ybottom) {\n                        character.pos.y = match.ybottom;\n                        character.vel.y = 0;\n                    }\n                }\n    \n            })\n\n    \n    }\n\n    checkCollisionX(character) {\n        let x;\n         \n        if (character.vel.x > 0) {\n            x = character.pos.x + character.size.x\n        } else if (character.vel.x < 0) {\n            x = character.pos.x;\n        } else {\n            return;\n        }\n\n        const matches = this.tiles.getByRange(x, x, character.pos.y, character.pos.y + character.size.y)\n\n       \n        matches.forEach(match=>{\n            if (match.tile.name !== 'flatGround' && match.tile.name !== 'ground' && match.tile.name !== 'greenGrass') {\n                return\n            }\n            if (character.vel.x > 0) { \n                if (character.pos.x + character.size.x > match.xleft) {\n                    character.pos.x = match.xleft - character.size.x;\n                    character.vel.x = 0;\n\n                    if(character.walk){\n                        character.walk.enemyDir = -1;\n                        character.walk.distance = 0;\n                    }\n                }\n            } else if (character.vel.x < 0) {\n                if (character.pos.x < match.xright) {\n                    character.pos.x = match.xright;\n                    character.vel.x = 0;\n                    if (character.walk) {\n                        character.walk.enemyDir = 1;\n                        character.walk.distance = 0;\n                    }\n                }\n            }\n\n        })\n    }\n\n}\n\nexport default TileCollider;","import Sound from '../dashboard/sound';\n\nclass CharactersCollider{\n    constructor(characters){\n        this.characters = characters;\n        this.sound = new Sound(\"src/audios/collision.wav\")\n    }\n\n    check(obj){\n        let result = false;\n        this.characters.forEach(character => {\n            if(character === obj){\n                result = false;\n                return;\n            }\n            if(character.boundaries.isCollide(obj.boundaries)){\n                console.log('Collide! GAME OVER')\n                this.sound.play();\n                result = true;\n            }\n        })\n        return result;\n    }\n}\n\nexport default CharactersCollider;","import Sound from '../dashboard/sound';\n\nclass Drop{\n    constructor(){\n        this.sound = new Sound(\"src/audios/drop.wav\");\n    }\n\n    check(character){\n        if(character.pos.y + character.size.y > 350){\n            console.log('Drop! Game Over!');\n            this.sound.play();\n            return true\n        }\n        return false;\n    }\n}\n\nexport default Drop;","import Matrix from './matrix';\nimport TileCollider from '../collision/tile-collider';\nimport CharactersCollider from '../collision/characters-collider';\nimport Drop from '../collision/drop';\n\nexport default class Layer {\n    constructor(){\n        this.layers = [];\n        this.tiles = new Matrix();\n        this.characters = new Set();\n        this.charactersCollider = new CharactersCollider(this.characters);\n        this.tileCollider = new TileCollider(this.tiles);\n        this.characterDrop = new Drop();\n        this.gameOver = false;\n    }\n\n    draw(context, camera=0){\n        this.layers.forEach(layer => {\n            layer(context, camera)\n        })\n    }\n\n    update(timestep, camera){\n        const gravity = 2000;\n        this.characters.forEach(character => {\n            // princess\n            if(character.jump){\n                character.jump.update(character, timestep);\n                character.run.update(character, timestep);\n                character.player.update(timestep);\n            }\n            \n            // enemy\n            if(character.walk){\n                character.walk.update(character, timestep);\n            }\n            \n            character.pos.x += character.vel.x * timestep;\n            this.tileCollider.checkCollisionX(character);\n\n            character.pos.y += character.vel.y * timestep;\n            this.tileCollider.checkCollisionY(character);\n                                    \n            character.vel.y += gravity * timestep;\n            \n            // Game logic, lose when drop\n            if(character.jump){\n                if(this.characterDrop.check(character)){\n                    character.player.reset();\n                    this.gameOver = true;\n                    return;\n                };\n            }\n\n        })\n        \n\n        // Game logic, lose when collide\n        this.characters.forEach(character => {\n            if(this.charactersCollider.check(character)){\n                character.player.reset();\n                this.gameOver = true;\n            };\n        })\n    }\n}\n\n","class Vector{\n    constructor(x, y) {\n        this.setVector(x, y);\n    }\n\n    setVector(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n}\n\nexport default Vector;","class MovingObjectBoundary{\n    constructor(pos, size){\n        this.pos = pos;\n        this.size = size;\n    }\n\n    isCollide(obj){\n        return this.getBottom() > obj.getTop() \n            && this.getTop() < obj.getBottom() \n            && this.getLeft() < obj.getRight()\n            && this.getRight() > obj.getLeft();\n    }\n\n    getBottom(){\n        return this.pos.y + this.size.y;\n    }\n\n    getTop(){\n        return this.pos.y\n    }\n\n    getLeft(){\n        return this.pos.x\n    }\n\n    getRight(){\n        return this.pos.x + this.size.x\n    }\n}\n\nexport default MovingObjectBoundary;","import Vector from './vectors';\nimport MovingObjectBoundary from './moving_objects_boundaries';\n\nclass MovingObject{\n    constructor(){\n        this.pos = new Vector(0,0);\n        this.vel = new Vector(0, 0);\n        this.size = new Vector(0,0);\n        this.boundaries = new MovingObjectBoundary(this.pos, this.size);\n    }\n    \n    update(timestep){\n        // multiplying the velocity by the amount of time (timestep)\n        // that has passed between rendering frames\n        this.pos.x += this.vel.x * timestep ;\n        this.pos.y += this.vel.y * timestep *1.8;      \n    }\n\n}\n\nexport default MovingObject;","import Sound from '../dashboard/sound';\n\nclass Jump{\n    constructor(){\n        this.duration = 0.1;\n        this.exactTime = 0;\n        this.velocityY= 500;\n        this.velocityX = 20;\n        this.sound = new Sound(\"src/audios/jump.wav\")\n    }\n\n    start(){\n        this.exactTime = this.duration;\n        this.sound.play();\n    }\n\n    stop(){\n        this.exactTime = 0;\n    }\n\n    update(character, timestep){\n        if(this.exactTime > 0){    \n            character.vel.y = -this.velocityY;\n            this.exactTime -= timestep;\n        }\n\n    }\n}\n\nexport default Jump;","class Run {\n    constructor() {\n        this.speed = 300;\n        this.dir = 0;\n        this.distance = 0;\n    }\n\n    update(character, timestep) {\n \n        character.vel.x = this.speed * this.dir * timestep;\n        if (this.dir){\n            this.distance += Math.abs(character.vel.x * timestep);\n        } else{\n            this.distance = 0;\n        }\n    }\n}\n\nexport default Run;","class Timer{\n    constructor(time=0){\n        this.time = time;\n        this.timerBuffer = document.createElement('canvas');\n        this.timerBuffer.height = 390;\n        this.timerBuffer.width = 600;\n        this.timerBufferContext = this.timerBuffer.getContext('2d');\n        this.timerBufferContext.font = \"30px VT323\";\n        this.timerBufferContext.fillStyle = 'white';\n    }\n\n    updateTime(timestep){\n        this.time += timestep\n    }\n\n    resetTime(){\n        this.time = 0\n    }\n\n    draw(context, x, y){\n        this.timerBufferContext.clearRect(0,0,600,390)\n        this.timerBufferContext.fillText(`Time: ${Math.round(this.time)}`, x, y)\n\n        context.drawImage(this.timerBuffer, 0, 0)\n    }\n}\n\nexport default Timer;","// Add a player control property to princess, then add \n// timer & score to player control\n// Create a dashboard to display timer and score\nimport Timer from './dashboard/timer';\n\nclass Player{\n    constructor(){\n        this.score = 0;\n        this.timer = new Timer();\n    }\n\n    update(timestep){\n        this.timer.updateTime(timestep);\n    }\n\n    reset(){\n        this.timer.resetTime();\n    }\n}\n\nexport default Player;","class EnemyWalk {\n    constructor() {\n        this.speed = 4000;\n        this.enemyDir = -1;\n        this.distance = 0;\n    }\n\n    update(character, timestep) {\n        character.vel.x = this.speed * this.enemyDir * timestep;\n        this.distance += Math.abs(character.vel.x * timestep);\n    }\n}\n\nexport default EnemyWalk;","export default class FixedTimeLoop{\n    constructor(timestep = 1/60){\n        let accumulated_time = 0;\n        let new_time_stamp;\n        let old_time_stamp = 0;\n        this.requestId = undefined;\n        this.gameOver = false;\n        this.updateTime = (timestamp) => {\n            if(new_time_stamp === undefined){\n                new_time_stamp = timestamp;\n            }\n            accumulated_time += (timestamp - new_time_stamp)/1000;\n           \n            // only update when accumulated time > timestep\n\n                while (accumulated_time > timestep){\n                    if(this.update(timestep)==='Game Over'){\n                        this.gameOver = true;\n                    };\n                    accumulated_time -= timestep;\n                }\n                new_time_stamp = timestamp;\n                if(!this.gameOver){\n                    this.start();\n                }else{            \n                    accumulated_time = 0;\n                    cancelAnimationFrame(this.requestId);\n                    new_time_stamp = undefined;\n                    this.requestId = undefined;\n                }\n        }\n    }\n\n    start(){\n        this.requestId = requestAnimationFrame(this.updateTime)\n    }\n\n    stop(){\n        cancelAnimationFrame(this.requestId)\n    }\n\n    \n}","class KeyboardInput{\n    constructor(character){\n        this.rightPressed = false;\n        this.leftPressed = false;\n        this.spacePressed = false;\n        this.character = character;\n        this.keyDownHandler = this.keyDownHandler.bind(this);\n        this.keyUpHandler = this.keyUpHandler.bind(this);\n    }\n\n    keyDownHandler(event) {\n        event.preventDefault();\n        if (event.keyCode === 39) {\n           \n            this.character.run.dir = event.keyCode;\n            this.rightPressed = true;\n        }\n        else if (event.keyCode === 37) {\n            this.character.run.dir = -event.keyCode;\n            this.leftPressed = true;\n        }\n        if (event.keyCode === 32) {\n            // avoid jump stack\n            if (this.character.jump.exactTime === 0 && Math.abs(this.character.vel.y) < 34){\n                this.character.jump.start();\n                this.spacePressed = true;\n            }\n        }\n}\n\n    keyUpHandler(event) {\n        event.preventDefault();\n        if (event.keyCode === 39) {\n            this.character.run.dir = 0;\n            this.rightPressed = false;\n        }\n        else if (event.keyCode === 37) {\n            this.character.run.dir = 0;\n            this.leftPressed = false;\n        }\n        if (event.keyCode === 32) {\n            this.character.jump.stop();\n            this.spacePressed = false;\n        }\n    }\n\n    listenKeys(window){\n\n        window.addEventListener('keydown', this.keyDownHandler);\n        window.addEventListener('keyup', this.keyUpHandler);\n    }\n}\n\nexport default KeyboardInput;","import Vector from './movements/vectors';\n\nclass Camera{\n    constructor(){\n        this.pos = new Vector(0,0);\n        this.size = new Vector(600, 390);\n    }\n}\n\nexport default Camera;","\nexport function createTitleLayer(text, x, y, font, size=45){\n    const titleBuffer = document.createElement('canvas');\n    titleBuffer.height = 390;\n    titleBuffer.width = 600;\n    const titleBufferContext = titleBuffer.getContext('2d');\n    titleBufferContext.font = size + \"px \" + font;\n    titleBufferContext.fillStyle = \"white\";\n    titleBufferContext.textAlign = \"center\";\n    return function drawTitleLayer(context){\n        titleBufferContext.clearRect(0,0,600, 390);\n        titleBufferContext.fillText(text,x,y);\n        context.drawImage(titleBuffer, 0, 0);\n    }\n}\n\nexport function createButtonLayer(button) {\n    const buttonBuffer = document.createElement('canvas');\n    buttonBuffer.height = 390;\n    buttonBuffer.width = 600;\n    const buttonBufferContext = buttonBuffer.getContext('2d');\n    const fontSize = 25;\n    //buttonBufferContext.fillStyle = \"white\";\n    const textSize = buttonBufferContext.measureText(button.text);\n    buttonBufferContext.font = fontSize + \"px VT323\";\n    const textX = button.x + (button.width / 2) - fontSize;\n    const textY = button.y + (button.height / 2) + fontSize / 3;\n    const radius = 3;\n    buttonBufferContext.beginPath();\n    buttonBufferContext.moveTo(button.x + radius, button.y);\n    buttonBufferContext.arcTo(button.x + button.width, button.y, button.x + button.width, button.y + button.height, radius);\n    buttonBufferContext.arcTo(button.x + button.width, button.y + button.height, button.x, button.y + button.height, radius);\n    buttonBufferContext.arcTo(button.x, button.y + button.height, button.x, button.y, radius);\n    buttonBufferContext.arcTo(button.x, button.y, button.x + button.width, button.y, radius);\n    buttonBufferContext.strokeStyle = \"white\"\n    buttonBufferContext.stroke();\n    return function drawbuttonLayer(context, camera) {\n        buttonBufferContext.clearRect(0, 0, buttonBuffer.height, buttonBuffer.width);\n        if(!button.hovered){\n            buttonBufferContext.fillStyle = \"green\";\n        }else{\n            buttonBufferContext.fillStyle = \"#57AF55\"\n        }       \n        buttonBufferContext.fill();\n        buttonBufferContext.fillStyle = \"white\";\n        buttonBufferContext.fillText(button.text, textX, textY);\n        context.drawImage(buttonBuffer, 0, 0)\n    }\n}\n \n","import {createButtonLayer} from './dashboard-draw';\nclass Button{\n    constructor(text, x, y, width, height, canvas){\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.clicked = false;\n        this.hovered = false;\n        this.text = text;  \n        this.canvas = canvas;\n        this.offsetLeft = this.canvas.offsetLeft;\n        this.offsetTop = this.canvas.offsetTop;\n        this.hoverHandler = this.hoverHandler.bind(this);\n        this.clickHandler = this.clickHandler.bind(this);\n\n        this.buttonLayer = createButtonLayer(this)\n    }\n\n    getMousePos(event){\n        return {\n            x: event.clientX - this.offsetLeft,\n            y: event.clientY - this.offsetTop\n        };\n    }\n\n    hoverHandler(event, context){\n        event.preventDefault();\n        let mousePos = {\n            x: event.clientX - this.offsetLeft,\n            y: event.clientY - this.offsetTop\n        };\n\n        if (mousePos.x > this.x && mousePos.x < (this.x + this.width) && mousePos.y > this.y && mousePos.y < this.y + this.height){\n            this.hovered = true;\n            \n        }else{\n            this.hovered = false;\n                   \n        }\n        this.buttonLayer(context);\n        \n    }\n\n    clickHandler(event,context){\n        event.preventDefault();\n        const mousePos = {\n            x: event.clientX - this.offsetLeft,\n            y: event.clientY - this.offsetTop\n        };\n\n        const last_click = this.clicked;\n  \n        if (mousePos.x > this.x && mousePos.x < (this.x + this.width) && mousePos.y > this.y && mousePos.y < this.y + this.height){\n            context.clearRect(0, 0, 600,390)\n            if(!last_click){\n                this.clicked = true;\n                console.log('Start Game!');           \n                this.handler();}          \n            \n        }else{\n            this.clicked = false;\n            \n        }\n    }\n\n\n}\n\nexport default Button;","import Sound from './dashboard/sound';\nimport { loadLevel } from \"./loaders\";\nimport {\n    createGroundLayer,\n    createMainBgLayer,\n    createCharacterLayer,\n    createDashboardLayer,\n    createTileMatrix\n} from './levels/level-draw';\nimport {\n    loadBackgroundLayers,\n    loadBackgroundTiles,\n} from \"./sprite-load\";\nimport Layer from './levels/layers';\nimport { createPrincessIdle } from './princess';\nimport { createEnemyWalk } from './enemies';\nimport FixedTimeLoop from './fixed-time-loop';\nimport KeyboardInput from './keyboard-input';\nimport Camera from './camera';\nimport {\n    createTitleLayer,\n    createButtonLayer\n}from './dashboard/dashboard-draw';\nimport Button from './dashboard/button';\n\nclass Game{\n    constructor(ctx, canvas){\n        this.startMusic = new Sound(\"src/audios/background.ogg\");\n        this.gameOverMusic = new Sound(\"src/audios/game-over.mp3\");\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.offsetLeft = this.canvas.offsetLeft;\n        this.offsetTop = this.canvas.offsetTop;\n        this.start = this.start.bind(this);\n        this.gameOverView = this.gameOverView.bind(this);\n        this.buttons = new Set();\n        this.bgs = [];\n        //this.showMainPage();\n    }\n\n    showMainPage(){\n        \n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n        Promise.all([\n            loadBackgroundLayers()\n        ]).then(([bg]) => {\n            const layer = new Layer();\n            layer.layers.push(createMainBgLayer(bg));\n            layer.layers.push(createTitleLayer('Forest', 300, 100, \"Bungee Shade\"));\n            layer.layers.push(createTitleLayer('Princess', 300, 150, \"Bungee Shade\"));\n            layer.layers.push(createTitleLayer('-- Press SPACE to jump --', 300, 290, \"VT323\", 20));\n            layer.layers.push(createTitleLayer('-- Press -> to move --', 300, 310, \"VT323\", 20));\n                              \n            const context = this.ctx;\n            const game = this;\n            \n            const startBtn = new Button('start', 260, 220, 80, 30, this.canvas, this.ctx, game);\n            //const quitBtn = new Button('quit', 260, 260, 80, 30, this.canvas);\n\n            function hover(e){\n                e.preventDefault();\n                startBtn.hoverHandler(e, context);\n                //quitBtn.hoverHandler(e, context);\n            }\n\n            function click(e){\n                e.preventDefault();\n                startBtn.clickHandler(e, context);\n                //quitBtn.clickHandler(e, context);\n            }\n\n            window.addEventListener('mousemove', hover, true)\n            window.addEventListener('click', click, true)\n            \n            startBtn.handler = function(){\n                window.removeEventListener('mousemove', hover, true)\n                window.removeEventListener('click', click, true)\n                layer.layers = [];\n                game.start();\n                return;\n            }\n            \n            // quitBtn.handler = function () {\n            //     window.removeEventListener('mousemove', hover, true)\n            //     window.removeEventListener('click', click, true)\n            //     layer.layers = [];\n            //     game.showMainPage();\n            //     return\n            // }\n            \n            layer.layers.push(createButtonLayer(startBtn))\n            //layer.layers.push(createButtonLayer(quitBtn))\n\n\n            // mouse events\n  \n            layer.draw(context)\n            \n        })\n    }\n\n    start(){\n        this.ctx.clearRect(0,0,this.canvas.width, this.canvas.height)\n        Promise.all([\n            loadBackgroundLayers(),\n            loadBackgroundTiles(),\n            loadLevel(\"level-1\"),\n            createPrincessIdle(),\n            createEnemyWalk(),\n        ]).then(([mainBg, jungleTiles, level, princessIdle, enemy]) => {\n            const player = princessIdle.player;\n            enemy.pos.setVector(600, 0);\n\n            // push to layers array and draw\n            const layer = new Layer();\n            \n            // create matrix\n            createTileMatrix(level.backgrounds, layer.tiles)\n\n            layer.layers.push(createMainBgLayer(mainBg));\n            layer.layers.push(createGroundLayer(jungleTiles, layer.tiles));\n            layer.layers.push(createCharacterLayer(princessIdle));\n            layer.layers.push(createCharacterLayer(enemy));\n            layer.layers.push(createDashboardLayer(player))\n\n            // add to characters\n            layer.characters.add(princessIdle);\n            layer.characters.add(enemy);\n\n            // scrolling camera\n            const camera = new Camera;\n\n            // keyboard input\n            const input = new KeyboardInput(princessIdle);\n            input.listenKeys(window);\n\n            // background music\n            this.startMusic.loop();\n            this.startMusic.play();\n            \n            const game = this;\n            const context = this.ctx;\n            const canvas = this.canvas;\n            const fixedLoop = new FixedTimeLoop(1/60);\n            fixedLoop.update = function update(timestep) {\n                if(!layer.gameOver){\n\n                    layer.update(timestep, camera);\n    \n                    if (princessIdle.pos.x > 100) {\n                        camera.pos.x = princessIdle.pos.x - 100;\n                    }\n                    layer.draw(context, camera);\n                }else{\n                    layer.layers = null;\n                    layer.characters = null;\n                    princessIdle.player.reset();\n                    princessIdle.player.timer.resetTime();\n                    game.gameOverView();\n                     \n                    return 'Game Over';\n                }\n\n            }\n            fixedLoop.start();\n        });\n    }\n\n    gameOverView(){\n        this.startMusic.pause();\n        this.gameOverMusic.play();\n        const layer = new Layer();\n\n        layer.layers.push(createTitleLayer('Game Over', 300, 100, \"VT323\"))\n        // createTitleLayer('Game Over', 300, 100, \"VT323\")(this.ctx);\n        const game = this;\n        const context = this.ctx;\n        \n        const restartBtn = new Button('start', 260, 220, 80, 30, this.canvas);\n        const quitBtn = new Button('quit', 260, 260, 80, 30, this.canvas);\n\n        function hover(e) {\n            e.preventDefault();\n            restartBtn.hoverHandler(e, context);\n            quitBtn.hoverHandler(e, context);\n        }\n\n        function click(e) {\n            e.preventDefault();\n            restartBtn.clickHandler(e, context);\n            quitBtn.clickHandler(e, context);\n        }\n\n        // mouse event\n        window.addEventListener('mousemove', hover, true)\n        window.addEventListener('click', click, true)\n\n        restartBtn.handler = function () {\n            window.removeEventListener('mousemove', hover, true)\n            window.removeEventListener('click', click, true)\n            layer.layers = [];\n            game.start();\n            return\n        }\n\n        \n        quitBtn.handler = function () {\n            window.removeEventListener('mousemove', hover, true)\n            window.removeEventListener('click', click, true)\n            layer.layers = [];\n            return game.showMainPage();\n            \n        }\n\n        layer.layers.push(createButtonLayer(restartBtn))\n        layer.layers.push(createButtonLayer(quitBtn))\n\n\n        layer.draw(context)\n    }\n}\n\nexport default Game;","import MovingObject from './movements/moving_objects';\nimport {loadPrincessIdle, loadPrincessRun} from './sprite-load';\nimport Jump from './movements/jump';\nimport Run from './movements/run';\n\nimport Player from './player';\n\nexport function createPrincessIdle(){\n    return Promise.all([\n        loadPrincessIdle(),\n        loadPrincessRun()\n    ]\n    ).then(([pIdle, pRun]) => {\n            const princess = new MovingObject();\n            princess.size.setVector(60, 60)\n\n            princess.jump = new Jump();\n            princess.run = new Run();\n            princess.player = new Player();\n            \n            const pRuns = ['run-1', 'run-2', 'run-3']\n            \n            princess.draw = function drawPrincess(context){\n                        \n                let pRunsIdx = (Math.floor(princess.run.distance / 10)) % pRuns.length;\n                if(princess.run.dir !== 0){\n                    pRun.draw(pRuns[pRunsIdx], context, 0,0,3,3, princess.run.dir < 0);\n                }else{\n                    pIdle.draw(\"idle-1\", context, 0, 0, 3, 3);\n                }\n                                \n            }\n            return princess;\n        })\n}","import MovingObject from './movements/moving_objects';\nimport { loadEnemyWalk } from './sprite-load';\nimport EnemyWalk from './movements/enemy_walk';\n\nexport function createEnemyWalk() {\n    return Promise.all([\n        loadEnemyWalk(),\n    ]\n    ).then(([enemyWalk]) => {\n        const enemy = new MovingObject();\n        enemy.size.setVector(45, 55)\n\n        enemy.walk = new EnemyWalk();\n\n        const eWalks = ['walk-1', 'walk-2', 'walk-3']\n\n        enemy.draw = function drawEnemy(context) {\n            \n            let enemyWalkIdx = (Math.floor(enemy.walk.distance / 10)) % eWalks.length; \n          \n            enemyWalk.draw(eWalks[enemyWalkIdx], context, 0, 0, 3, 3, enemy.walk.enemyDir < 0);                        \n        }\n        return enemy;\n    })\n}","import \"./styles/index.scss\";\nimport './scripts/loaders';\nimport Game from './scripts/game';\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const canvas = document.getElementsByTagName(\"canvas\")[0];\n  const ctx = canvas.getContext(\"2d\", { alpha: false });\n  const offsetLeft = canvas.offsetLeft;\n  const offsetTop = canvas.offsetTop;\n\n  const game = new Game(ctx, canvas);\n  game.showMainPage();\n\n\n});"],"sourceRoot":""}