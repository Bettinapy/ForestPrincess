{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/loaders.js","webpack:///./src/scripts/sprite.js","webpack:///./src/scripts/levels/level-draw.js","webpack:///./src/scripts/levels/matrix.js","webpack:///./src/scripts/collision/pos-converter.js","webpack:///./src/scripts/collision/tile-collider.js","webpack:///./src/scripts/dashboard/sound.js","webpack:///./src/scripts/collision/characters-collider.js","webpack:///./src/scripts/collision/drop.js","webpack:///./src/scripts/levels/layers.js","webpack:///./src/scripts/movements/vectors.js","webpack:///./src/scripts/movements/moving_objects_boundaries.js","webpack:///./src/scripts/movements/moving_objects.js","webpack:///./src/scripts/movements/jump.js","webpack:///./src/scripts/movements/run.js","webpack:///./src/scripts/dashboard/timer.js","webpack:///./src/scripts/player.js","webpack:///./src/scripts/movements/enemy_walk.js","webpack:///./src/scripts/fixed-time-loop.js","webpack:///./src/scripts/keyboard-input.js","webpack:///./src/scripts/camera.js","webpack:///./src/index.js","webpack:///./src/scripts/sprite-load.js","webpack:///./src/scripts/princess.js","webpack:///./src/scripts/enemies.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","loadImage","url","Promise","resolve","image","Image","addEventListener","src","Sprite","width","height","this","tiles","Map","x","y","oppoEles","map","flip","ele","document","createElement","eleContext","getContext","scale","translate","drawImage","set","context","resizeX","resizeY","createGroundLayer","backgrounds","sprites","groundBuffer","forEach","bg","background","ranges","x1","x2","y1","y2","drawTile","tile","drawGround","camera","pos","createCharacterLayer","character","characterBuffer","characterBufferContext","clearRect","draw","Matrix","table","window","PosConverter","matrix","tileSize","Math","floor","pos1","pos2","posMax","ceil","range","push","posToIndex","iX","iY","ytop","ybottom","xleft","xright","matches","posToIndexRange","match","getByIndex","posX","posY","TileCollider","tilesMatrix","vel","size","getByRange","walk","enemyDir","distance","Sound","sound","setAttribute","style","display","body","appendChild","loop","play","pause","CharactersCollider","characters","obj","boundaries","isCollide","console","log","Drop","Layer","layers","Set","charactersCollider","tileCollider","characterDrop","layer","timestep","jump","update","run","player","checkCollisionX","checkCollisionY","check","Vector","setVector","MovingObjectBoundary","getBottom","getTop","getLeft","getRight","MovingObject","Jump","duration","exactTime","velocityY","velocityX","Run","speed","dir","abs","Timer","time","round","font","fillStyle","fillText","Player","score","timer","updateTime","EnemyWalk","FixedTimeLoop","accumulated_time","old_time_stamp","new_time_stamp","requestAnimationFrame","KeyboardInput","rightPressed","leftPressed","spacePressed","keyDownHandler","keyUpHandler","event","preventDefault","keyCode","start","stop","Camera","level","ctx","getElementsByTagName","all","then","mainImg","mainBg","jungleImg","jungleTiles","fetch","response","clone","json","princessIdleImg","princessIdle","princessRunImg","princessRun","pIdle","pRun","princess","pRuns","pRunsIdx","length","enemyWalkImg","enemyWalk","enemy","eWalks","enemyWalkIdx","mainBgBuffer","createMainBgLayer","add","listenKeys","bgMusic","fixedLoop"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export function loadImage(url) {\n  /*\n   * We are going to return a Promise which, when we .then\n   * will give us an Image that should be fully loaded\n   */\n  return new Promise((resolve) => {\n    /*\n     * Create the image that we are going to use to\n     * to hold the resource\n     */\n    const image = new Image();\n    /*\n     * The Image API deals in even listeners and callbacks\n     * we attach a listener for the \"load\" event which fires\n     * when the Image has finished the network request and\n     * populated the Image with data\n     */\n    image.addEventListener(\"load\", () => {\n      /*\n       * You have to manually tell the Promise that you are\n       * done dealing with asynchronous stuff and you are ready\n       * for it to give anything that attached a callback\n       * through .then a realized value.  We do that by calling\n       * resolve and passing it the realized value\n       */\n      resolve(image);\n    });\n    /*\n     * Setting the Image.src is what starts the networking process\n     * to populate an image.  After you set it, the browser fires\n     * a request to get the resource.  We attached a load listener\n     * which will be called once the request finishes and we have\n     * image data\n     */\n    image.src = url;\n  });\n}\n\nexport function loadLevel(level) {\n\n  return fetch(`src/scripts/levels/${level}.json`)\n    .then((response) => {\n    \n        return(response.clone().json())\n    });\n}\n","const HEIGHT = 400;\nconst WIDTH = 600;\nclass Sprite {\n    constructor(image, width, height) {\n        this.image = image;\n        this.width = width;\n        this.height = height;\n        // this.tiles store all created sprites\n        this.tiles = new Map();\n    }\n\n    create(name, x, y, width, height){\n        const oppoEles = [false, true].map(flip => {\n            if(!width) width = this.width;\n            if(!height) height = this.height;\n            const ele = document.createElement('canvas');\n            ele.height = height;\n            ele.width = width;\n            const eleContext = ele.getContext('2d');\n\n            if(flip){\n                // rotate canvas horizontally\n                eleContext.scale(-1,1);\n                // hard coded here  \n                eleContext.translate(-15, 0);\n            }\n            \n            eleContext.drawImage(\n                this.image,\n                x,\n                y,\n                width,\n                height,\n                0,0,\n                width,\n                height\n            );\n\n            return ele;\n        })\n        this.tiles.set(name, oppoEles)\n    }\n\n    draw(name, context, x, y, resizeX=1, resizeY=1, flip=false){\n        const ele = this.tiles.get(name)[flip ? 1 : 0];\n        context.drawImage(ele, x, y, this.width*resizeX, this.height*resizeY);        \n    }\n\n    drawTile(name, context, x, y, resizeX = 1, resizeY = 1, flip=false) {\n        const ele = this.tiles.get(name)[flip ? 1 : 0];\n    \n        context.drawImage(ele, x*this.width, y*this.height, this.width * resizeX, this.height * resizeY);\n    }\n}\n\nexport default Sprite;","export function drawGround(background, context, sprites) {\n\n  background.ranges.forEach(([x1, x2, y1, y2]) => {\n\n    for (let x = x1; x < x2; x++) {\n      for (let y = y1; y < y2; y++) {\n        sprites.drawTile(background.tile, context, x, y);\n      }\n    }\n  });\n}\n\nexport function createGroundLayer(backgrounds, sprites){\n  const worldW = 24000;\n\n  const groundBuffer = document.createElement('canvas');\n  groundBuffer.height = 390;\n  groundBuffer.width = worldW;\n\n  backgrounds.forEach(bg => {\n    drawGround(bg, groundBuffer.getContext('2d'), sprites)\n  })\n\n  return function drawGroundLayer(context, camera){\n\n    context.drawImage(groundBuffer, -camera.pos.x, 0);\n  }\n}\n\nexport function createMainBgLayer(mainBg){\n  const mainBgBuffer = document.createElement('canvas');\n  mainBgBuffer.height = 390;\n  mainBgBuffer.width = 600 * 2 + 50;\n  const mainBgBufferContext = mainBgBuffer.getContext('2d');\n  \n  return function drawMainBgLayer(context, camera){\n\n    mainBg.draw(\"mainBg\", context, 0, 0, 2, 2);\n\n  }\n}\n\nexport function createCharacterLayer(character){\n  const characterBuffer = document.createElement('canvas');\n  characterBuffer.height = 60;\n  characterBuffer.width = 60;\n  const characterBufferContext = characterBuffer.getContext('2d');\n  return function drawCharacterLayer(context, camera){\n    characterBufferContext.clearRect(0, 0, 60, 60);\n    character.draw(characterBufferContext);\n\n    context.drawImage(\n      characterBuffer, \n      character.pos.x - camera.pos.x, \n      character.pos.y - camera.pos.y\n      )\n    //princess.draw(context)\n  }\n}\n\n\nexport function createDashboardLayer(character) {\n  return function drawDashboardLayer(context, camera) {\n    character.player.timer.draw(context, 450, 50)\n  }\n}\n\n\nexport function createTileMatrix(backgrounds, tiles){\n  backgrounds.forEach(background => {\n    background.ranges.forEach(([x1, x2, y1, y2]) => {\n  \n      for (let x = x1; x < x2; x++) {\n        for (let y = y1; y < y2; y++) {\n          tiles.set(x, y, {name: background.tile})\n        }\n      }\n    });\n\n  })\n}","class Matrix{\n    constructor(){\n        this.table = [];\n    }\n\n    set(x,y,value){\n        if(!this.table[x]){\n            this.table[x] = [];\n        }\n        this.table[x][y] = value;\n    }\n\n    get(x,y){\n        if(this.table[x]){\n            return this.table[x][y]\n        }else{\n            return undefined;\n        }\n\n    }\n}\n\nwindow.Matrix = Matrix;\n\nexport default Matrix;","// conver the real world position to index\nclass PosConverter{\n    constructor(matrix, tileSize=30){\n        this.matrix = matrix;\n        this.tileSize = tileSize;\n    }\n\n    posToIndex(pos){\n        return Math.floor(pos/this.tileSize)\n    }\n\n    posToIndexRange(pos1, pos2){\n        const posMax = Math.ceil(pos2/this.tileSize) * this.tileSize\n        const range = [];\n        while(pos1 < posMax){\n            range.push(this.posToIndex(pos1));\n            pos1 += this.tileSize;\n        }\n        return range;\n    }\n\n    getByIndex(iX, iY){\n        const tile = this.matrix.get(iX, iY);\n        const ytop = iY* this.tileSize;\n        const ybottom = ytop + this.tileSize;\n        const xleft = iX * this.tileSize;\n        const xright = xleft + this.tileSize;\n\n        if(tile){\n            return {\n                tile,\n                ytop,\n                ybottom, \n                xleft,\n                xright \n            }\n        }\n    }\n\n    getByRange(xleft, xright, ybottom, ytop){\n        const matches = [];\n        this.posToIndexRange(xleft, xright).forEach(iX => {\n            this.posToIndexRange(ybottom, ytop).forEach(iY=>{\n                const match = this.getByIndex(iX, iY);\n                if(match){\n                    matches.push(match)\n                }\n            })\n        })\n        return matches;\n    }\n\n    matchPos(posX, posY){\n       \n        return this.getByIndex(this.posToIndex(posX), this.posToIndex(posY))\n    }\n\n}\n\nexport default PosConverter;","import PosConverter from './pos-converter';\n\nclass TileCollider {\n    constructor(tilesMatrix) {\n        this.tiles = new PosConverter(tilesMatrix);\n    }\n\n    checkCollisionY(character){\n      \n        let y;\n        if (character.vel.y > 0) {\n            y = character.pos.y + character.size.y\n        } else if (character.vel.y < 0 ) {\n            y = character.pos.y;\n        } else {\n            return;\n        }\n        \n        const matches = this.tiles.getByRange(character.pos.x, character.pos.x + character.size.x, y, y);\n        \n            matches.forEach(match=>{\n                if (match.tile.name !== 'flatGround' && match.tile.name !== 'ground' && match.tile.name !== 'greenGrass'){\n                    return\n                }\n                if(character.vel.y > 0){\n        \n                    if (character.pos.y + character.size.y >= match.ytop) {\n                        character.pos.y = match.ytop - character.size.y;\n                        character.vel.y = 0;\n    \n                    }\n                } else if (character.vel.y < 0) {\n                    if (character.pos.y < match.ybottom) {\n                        character.pos.y = match.ybottom;\n                        character.vel.y = 0;\n                    }\n                }\n    \n            })\n\n    \n    }\n\n    checkCollisionX(character) {\n        let x;\n         \n        if (character.vel.x > 0) {\n            x = character.pos.x + character.size.x\n        } else if (character.vel.x < 0) {\n            x = character.pos.x;\n        } else {\n            return;\n        }\n\n        const matches = this.tiles.getByRange(x, x, character.pos.y, character.pos.y + character.size.y)\n\n       \n        matches.forEach(match=>{\n            if (match.tile.name !== 'flatGround' && match.tile.name !== 'ground' && match.tile.name !== 'greenGrass') {\n                return\n            }\n            if (character.vel.x > 0) { \n                if (character.pos.x + character.size.x > match.xleft) {\n                    character.pos.x = match.xleft - character.size.x;\n                    character.vel.x = 0;\n\n                    if(character.walk){\n                        character.walk.enemyDir = -1;\n                        character.walk.distance = 0;\n                    }\n                }\n            } else if (character.vel.x < 0) {\n                if (character.pos.x < match.xright) {\n                    character.pos.x = match.xright;\n                    character.vel.x = 0;\n                    if (character.walk) {\n                        character.walk.enemyDir = 1;\n                        character.walk.distance = 0;\n                    }\n                }\n            }\n\n        })\n    }\n\n}\n\nexport default TileCollider;","class Sound{\n    constructor(src){\n        this.sound = document.createElement(\"audio\");\n        this.sound.src = src;\n        this.sound.setAttribute(\"preload\", \"auto\");\n        this.sound.setAttribute(\"controls\", \"none\");\n        this.sound.style.display = \"none\";\n        document.body.appendChild(this.sound);\n    }\n    \n    loop(){\n        this.sound.loop = true;\n    }\n\n    play(){\n        this.sound.play();\n    }\n\n    pause(){\n        this.sound.pause();\n    }\n\n}\n\nexport default Sound;","import Sound from '../dashboard/sound';\n\nclass CharactersCollider{\n    constructor(characters){\n        this.characters = characters;\n        this.sound = new Sound(\"src/audios/collision.wav\")\n    }\n\n    check(obj){\n        this.characters.forEach(character => {\n            if(character === obj){\n                return\n            }\n            if(character.boundaries.isCollide(obj.boundaries)){\n                console.log('Collide! GAME OVER')\n                this.sound.play();\n                return true;\n            }\n        })\n    }\n}\n\nexport default CharactersCollider;","import Sound from '../dashboard/sound';\n\nclass Drop{\n    constructor(){\n        this.sound = new Sound(\"src/audios/drop.wav\");\n    }\n\n    check(character){\n        if(character.pos.y + character.size.y > 350){\n            console.log('Drop! Game Over!');\n            this.sound.play();\n            return true\n        }\n        return false;\n    }\n}\n\nexport default Drop;","import Matrix from './matrix';\nimport TileCollider from '../collision/tile-collider';\nimport CharactersCollider from '../collision/characters-collider';\nimport Drop from '../collision/drop';\n\nexport default class Layer {\n    constructor(){\n        this.layers = [];\n        this.tiles = new Matrix();\n        this.characters = new Set();\n        this.charactersCollider = new CharactersCollider(this.characters);\n        this.tileCollider = new TileCollider(this.tiles);\n        this.characterDrop = new Drop();\n    }\n\n    draw(context, camera){\n        this.layers.forEach(layer => {\n            layer(context, camera)\n        })\n    }\n\n    update(timestep, camera){\n        const gravity = 2000;\n        this.characters.forEach(character => {\n            // princess\n            if(character.jump){\n                character.jump.update(character, timestep);\n                character.run.update(character, timestep);\n                character.player.update(timestep);\n            }\n            \n            // enemy\n            if(character.walk){\n                character.walk.update(character, timestep);\n            }\n            \n            character.pos.x += character.vel.x * timestep;\n            this.tileCollider.checkCollisionX(character);\n\n            character.pos.y += character.vel.y * timestep;\n            this.tileCollider.checkCollisionY(character);\n                                    \n            character.vel.y += gravity * timestep;\n            \n            // Game logic, lose when drop\n            if(character.jump){\n                this.characterDrop.check(character);\n            }\n\n        })\n        \n\n        // Game logic, lose when collide\n        this.characters.forEach(character => {\n            this.charactersCollider.check(character);\n        })\n    }\n}\n\n","class Vector{\n    constructor(x, y) {\n        this.setVector(x, y);\n    }\n\n    setVector(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n}\n\nexport default Vector;","class MovingObjectBoundary{\n    constructor(pos, size){\n        this.pos = pos;\n        this.size = size;\n    }\n\n    isCollide(obj){\n        return this.getBottom() > obj.getTop() \n            && this.getTop() < obj.getBottom() \n            && this.getLeft() < obj.getRight()\n            && this.getRight() > obj.getLeft();\n    }\n\n    getBottom(){\n        return this.pos.y + this.size.y;\n    }\n\n    getTop(){\n        return this.pos.y\n    }\n\n    getLeft(){\n        return this.pos.x\n    }\n\n    getRight(){\n        return this.pos.x + this.size.x\n    }\n}\n\nexport default MovingObjectBoundary;","import Vector from './vectors';\nimport MovingObjectBoundary from './moving_objects_boundaries';\n\nclass MovingObject{\n    constructor(){\n        this.pos = new Vector(0,0);\n        this.vel = new Vector(0, 0);\n        this.size = new Vector(0,0);\n        this.boundaries = new MovingObjectBoundary(this.pos, this.size);\n    }\n    \n    update(timestep){\n        // multiplying the velocity by the amount of time (timestep)\n        // that has passed between rendering frames\n        this.pos.x += this.vel.x * timestep ;\n        this.pos.y += this.vel.y * timestep *1.8;      \n    }\n\n}\n\nexport default MovingObject;","import Sound from '../dashboard/sound';\n\nclass Jump{\n    constructor(){\n        this.duration = 0.1;\n        this.exactTime = 0;\n        this.velocityY= 500;\n        this.velocityX = 20;\n        this.sound = new Sound(\"src/audios/jump.wav\")\n    }\n\n    start(){\n        this.exactTime = this.duration;\n        this.sound.play();\n    }\n\n    stop(){\n        this.exactTime = 0;\n    }\n\n    update(character, timestep){\n        if(this.exactTime > 0){    \n            character.vel.y = -this.velocityY;\n            this.exactTime -= timestep;\n        }\n\n    }\n}\n\nexport default Jump;","class Run {\n    constructor() {\n        this.speed = 300;\n        this.dir = 0;\n        this.distance = 0;\n    }\n\n    update(character, timestep) {\n \n        character.vel.x = this.speed * this.dir * timestep;\n        if (this.dir){\n            this.distance += Math.abs(character.vel.x * timestep);\n        } else{\n            this.distance = 0;\n        }\n    }\n}\n\nexport default Run;","class Timer{\n    constructor(time=0){\n        this.time = time;\n    }\n\n    updateTime(timestep){\n        this.time += timestep\n    }\n\n    draw(context, x, y){\n        console.log(`Time: ${Math.round(this.time)}`);\n        context.font = \"30px VT323\";\n        context.fillStyle = 'white';\n        context.fillText(`Time: ${Math.round(this.time)}`, x, y)\n    }\n}\n\nexport default Timer;","// Add a player control property to princess, then add \n// timer & score to player control\n// Create a dashboard to display timer and score\nimport Timer from './dashboard/timer';\n\nclass Player{\n    constructor(){\n        this.score = 0;\n        this.timer = new Timer();\n    }\n\n    update(timestep){\n        this.timer.updateTime(timestep);\n    }\n}\n\nexport default Player;","class EnemyWalk {\n    constructor() {\n        this.speed = 4000;\n        this.enemyDir = -1;\n        this.distance = 0;\n    }\n\n    update(character, timestep) {\n        character.vel.x = this.speed * this.enemyDir * timestep;\n        this.distance += Math.abs(character.vel.x * timestep);\n    }\n}\n\nexport default EnemyWalk;","export default class FixedTimeLoop{\n    constructor(timestep = 1/60){\n        let accumulated_time = 0;\n        let old_time_stamp = 0;\n        this.updateTime = (new_time_stamp) => {\n\n            accumulated_time += (new_time_stamp - old_time_stamp)/1000;\n           \n            // only update when accumulated time > timestep\n            while (accumulated_time > timestep){\n                this.update(timestep);\n                accumulated_time -= timestep;\n            }\n            old_time_stamp = new_time_stamp;\n            requestAnimationFrame(this.updateTime);\n        }\n    }\n\n    start(){\n        requestAnimationFrame(this.updateTime)\n    }\n\n    stop(){\n        \n    }\n}","class KeyboardInput{\n    constructor(character){\n        this.rightPressed = false;\n        this.leftPressed = false;\n        this.spacePressed = false;\n        this.character = character;\n        this.keyDownHandler = this.keyDownHandler.bind(this);\n        this.keyUpHandler = this.keyUpHandler.bind(this);\n    }\n\n    keyDownHandler(event) {\n        event.preventDefault();\n        if (event.keyCode === 39) {\n           \n            this.character.run.dir = event.keyCode;\n            this.rightPressed = true;\n        }\n        else if (event.keyCode === 37) {\n            this.character.run.dir = -event.keyCode;\n            this.leftPressed = true;\n        }\n        if (event.keyCode === 32) {\n            // avoid jump stack\n            if (this.character.jump.exactTime === 0 && Math.abs(this.character.vel.y) < 34){\n                this.character.jump.start();\n                this.spacePressed = true;\n            }\n        }\n}\n\n    keyUpHandler(event) {\n        event.preventDefault();\n        if (event.keyCode === 39) {\n            this.character.run.dir = 0;\n            this.rightPressed = false;\n        }\n        else if (event.keyCode === 37) {\n            this.character.run.dir = 0;\n            this.leftPressed = false;\n        }\n        if (event.keyCode === 32) {\n            this.character.jump.stop();\n            this.spacePressed = false;\n        }\n    }\n\n    listenKeys(window){\n\n        window.addEventListener('keydown', this.keyDownHandler);\n        window.addEventListener('keyup', this.keyUpHandler);\n    }\n}\n\nexport default KeyboardInput;","import Vector from './movements/vectors';\n\nclass Camera{\n    constructor(){\n        this.pos = new Vector(0,0);\n    }\n}\n\nexport default Camera;","import \"./styles/index.scss\";\nimport './scripts/loaders';\nimport Sprite from './scripts/sprite';\nimport { loadLevel } from \"./scripts/loaders\";\nimport { \n  createGroundLayer,\n  createMainBgLayer, \n  createCharacterLayer,\n  createDashboardLayer,\n  createTileMatrix\n} from './scripts/levels/level-draw';\nimport {\n  loadBackgroundLayers,\n  loadBackgroundTiles,\n} from \"./scripts/sprite-load\";\nimport Layer from './scripts/levels/layers';\nimport {createPrincessIdle} from './scripts/princess';\nimport {createEnemyWalk} from './scripts/enemies';\nimport FixedTimeLoop from './scripts/fixed-time-loop';\nimport KeyboardInput from './scripts/keyboard-input';\nimport Camera from './scripts/camera';\nimport Sound from './scripts/dashboard/sound';\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const canvas = document.getElementsByTagName(\"canvas\")[0];\n  const ctx = canvas.getContext(\"2d\");\n  \n  Promise.all([\n    loadBackgroundLayers(),\n    loadBackgroundTiles(),\n    loadLevel(\"level-1\"),\n    createPrincessIdle(),\n    createEnemyWalk(),\n  ]).then(([mainBg, jungleTiles, level, princessIdle, enemy]) => {\n    \n    enemy.pos.setVector(600,0)\n\n    // push to layers array and draw\n    const layer = new Layer();\n    layer.layers.push(createMainBgLayer(mainBg));\n    layer.layers.push(createGroundLayer(level.backgrounds, jungleTiles));\n    layer.layers.push(createCharacterLayer(princessIdle));\n    layer.layers.push(createCharacterLayer(enemy));\n    layer.layers.push(createDashboardLayer(princessIdle))\n    \n    // add to characters\n    layer.characters.add(princessIdle);\n    layer.characters.add(enemy);\n\n    // create matrix\n    createTileMatrix(level.backgrounds, layer.tiles)\n   \n    // scrolling camera\n    const camera = new Camera;\n\n    // keyboard input\n    const input = new KeyboardInput(princessIdle);\n    input.listenKeys(window);\n\n    // background music\n    const bgMusic = new Sound(\"src/audios/background.ogg\")\n    bgMusic.loop();\n    bgMusic.play();\n\n    const fixedLoop = new FixedTimeLoop();\n    fixedLoop.update = function update(timestep){\n\n      layer.update(timestep, camera);\n\n      if (princessIdle.pos.x > 300) {\n        camera.pos.x = princessIdle.pos.x - 300;\n      }\n      layer.draw(ctx, camera);\n      \n    }\n    fixedLoop.start();\n  });\n\n});","import Sprite from './sprite';\nimport {loadImage} from './loaders';\n\nexport function loadBackgroundLayers(){\n    return loadImage(\"src/images/main-bg.png\").then((mainImg) => {\n      const mainBg = new Sprite(mainImg, 600, 450);\n      mainBg.create(\"mainBg\", 0, 0);\n\n      return mainBg;\n    });\n}\n\nexport function loadBackgroundTiles(){\n    return loadImage(\"src/images/jungle_tileset.png\")\n        .then((jungleImg) => {\n            \n            const jungleTiles = new Sprite(jungleImg, 30, 30);\n            jungleTiles.create(\"flatGround\", 70, 225);\n            jungleTiles.create(\"ground\", 354, 210);\n            jungleTiles.create(\"greenGrass\", 161, 33);\n            jungleTiles.create('obstacleGrass', 64, 34, 80, 60);\n            return jungleTiles;\n    });\n}\n\nexport function loadPrincessIdle() {\n  return loadImage(\"src/images/princess/Idle.png\").then((princessIdleImg) => {\n\n    const princessIdle = new Sprite(princessIdleImg, 30, 30);\n    princessIdle.create(\"idle-1\", 24, 11);\n    princessIdle.create(\"idle-2\", 24, 59);\n    princessIdle.create(\"idle-3\", 24, 303);\n    return princessIdle;\n  });\n}\n\nexport function loadPrincessRun() {\n  return loadImage(\"src/images/princess/Run.png\").then((princessRunImg) => {\n\n    const princessRun = new Sprite(princessRunImg, 30, 30);\n    princessRun.create(\"run-1\", 24, 11);\n    princessRun.create(\"run-2\", 24, 59);\n    princessRun.create(\"run-3\", 24, 153);\n    return princessRun;\n  });\n}\n\nexport function loadEnemyWalk() {\n  return loadImage(\"src/images/enemies/walk.png\").then((enemyWalkImg) => {\n\n    const enemyWalk = new Sprite(enemyWalkImg, 20, 20);\n    enemyWalk.create(\"walk-1\", 29, 14);\n    enemyWalk.create(\"walk-2\", 29, 60);\n    enemyWalk.create(\"walk-3\", 29, 109);\n    return enemyWalk;\n  });\n}","import MovingObject from './movements/moving_objects';\nimport {loadPrincessIdle, loadPrincessRun} from './sprite-load';\nimport Jump from './movements/jump';\nimport Run from './movements/run';\n\nimport Player from './player';\n\nexport function createPrincessIdle(){\n    return Promise.all([\n        loadPrincessIdle(),\n        loadPrincessRun()\n    ]\n    ).then(([pIdle, pRun]) => {\n            const princess = new MovingObject();\n            princess.size.setVector(60, 60)\n\n            princess.jump = new Jump();\n            princess.run = new Run();\n            princess.player = new Player();\n            \n            const pRuns = ['run-1', 'run-2', 'run-3']\n            \n            princess.draw = function drawPrincess(context){\n                        \n                let pRunsIdx = (Math.floor(princess.run.distance / 10)) % pRuns.length;\n                if(princess.run.dir !== 0){\n                    pRun.draw(pRuns[pRunsIdx], context, 0,0,3,3, princess.run.dir < 0);\n                }else{\n                    pIdle.draw(\"idle-1\", context, 0, 0, 3, 3);\n                }\n                                \n            }\n            return princess;\n        })\n}","import MovingObject from './movements/moving_objects';\nimport { loadEnemyWalk } from './sprite-load';\nimport EnemyWalk from './movements/enemy_walk';\n\nexport function createEnemyWalk() {\n    return Promise.all([\n        loadEnemyWalk(),\n    ]\n    ).then(([enemyWalk]) => {\n        const enemy = new MovingObject();\n        enemy.size.setVector(60, 60)\n\n        enemy.walk = new EnemyWalk();\n\n        const eWalks = ['walk-1', 'walk-2', 'walk-3']\n\n        enemy.draw = function drawEnemy(context) {\n            \n            let enemyWalkIdx = (Math.floor(enemy.walk.distance / 10)) % eWalks.length; \n          \n            enemyWalk.draw(eWalks[enemyWalkIdx], context, 0, 0, 3, 3, enemy.walk.enemyDir < 0);                        \n        }\n        return enemy;\n    })\n}"],"sourceRoot":""}